{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HighQualityOBJViewer() {\n  _s();\n  const [objFile, setObjFile] = useState(null);\n  const [textureFile, setTextureFile] = useState(null);\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    if (objFile && textureFile) {\n      initThreeScene();\n    }\n  }, [objFile, textureFile]);\n  const handleObjFileChange = event => {\n    setObjFile(event.target.files[0]);\n  };\n  const handleTextureFileChange = event => {\n    setTextureFile(event.target.files[0]);\n  };\n  const initThreeScene = () => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap; // Soft shadows\n    viewerRef.current.innerHTML = '';\n    viewerRef.current.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    // Improved Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 1);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(1, 2, 3);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // Optionally add HDR environment lighting\n    new RGBELoader().setDataType(THREE.UnsignedByteType).load('path_to_your_hdr_image.hdr', texture => {\n      const envMap = pmremGenerator.fromEquirectangular(texture).texture;\n      scene.environment = envMap;\n      texture.dispose();\n      pmremGenerator.dispose();\n    });\n    const pmremGenerator = new THREE.PMREMGenerator(renderer);\n    pmremGenerator.compileEquirectangularShader();\n    const objLoader = new OBJLoader();\n    const textureLoader = new THREE.TextureLoader();\n    const reader = new FileReader();\n    reader.readAsDataURL(objFile);\n    reader.onload = () => {\n      objLoader.load(reader.result, object => {\n        object.traverse(child => {\n          if (child.isMesh) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        });\n        const readerTexture = new FileReader();\n        readerTexture.readAsDataURL(textureFile);\n        readerTexture.onload = () => {\n          const texture = textureLoader.load(readerTexture.result);\n          object.traverse(child => {\n            if (child.isMesh) {\n              child.material.map = texture;\n            }\n          });\n          scene.add(object);\n        };\n      });\n    };\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n    animate();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleObjFileChange,\n      accept: \".obj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleTextureFileChange,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: viewerRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(HighQualityOBJViewer, \"xyiIFRbj6Yc1WKDnmCI3B4vc78g=\");\n_c = HighQualityOBJViewer;\nexport default HighQualityOBJViewer;\nvar _c;\n$RefreshReg$(_c, \"HighQualityOBJViewer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","OBJLoader","OrbitControls","RGBELoader","jsxDEV","_jsxDEV","HighQualityOBJViewer","_s","objFile","setObjFile","textureFile","setTextureFile","viewerRef","initThreeScene","handleObjFileChange","event","target","files","handleTextureFileChange","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","type","PCFSoftShadowMap","current","innerHTML","appendChild","domElement","controls","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","set","castShadow","setDataType","UnsignedByteType","load","texture","envMap","pmremGenerator","fromEquirectangular","environment","dispose","PMREMGenerator","compileEquirectangularShader","objLoader","textureLoader","TextureLoader","reader","FileReader","readAsDataURL","onload","result","object","traverse","child","isMesh","receiveShadow","readerTexture","material","map","animate","requestAnimationFrame","update","render","children","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\n\nfunction HighQualityOBJViewer() {\n    const [objFile, setObjFile] = useState(null);\n    const [textureFile, setTextureFile] = useState(null);\n    const viewerRef = useRef(null);\n\n    useEffect(() => {\n        if (objFile && textureFile) {\n            initThreeScene();\n        }\n    }, [objFile, textureFile]);\n\n    const handleObjFileChange = (event) => {\n        setObjFile(event.target.files[0]);\n    };\n\n    const handleTextureFileChange = (event) => {\n        setTextureFile(event.target.files[0]);\n    };\n\n    const initThreeScene = () => {\n        const scene = new THREE.Scene();\n\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.z = 5;\n\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap; // Soft shadows\n        viewerRef.current.innerHTML = '';\n        viewerRef.current.appendChild(renderer.domElement);\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n\n        // Improved Lighting\n        const ambientLight = new THREE.AmbientLight(0x404040, 1);\n        scene.add(ambientLight);\n\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n        directionalLight.position.set(1, 2, 3);\n        directionalLight.castShadow = true;\n        scene.add(directionalLight);\n\n        // Optionally add HDR environment lighting\n        new RGBELoader()\n            .setDataType(THREE.UnsignedByteType)\n            .load('path_to_your_hdr_image.hdr', (texture) => {\n                const envMap = pmremGenerator.fromEquirectangular(texture).texture;\n                scene.environment = envMap;\n                texture.dispose();\n                pmremGenerator.dispose();\n            });\n\n        const pmremGenerator = new THREE.PMREMGenerator(renderer);\n        pmremGenerator.compileEquirectangularShader();\n\n        const objLoader = new OBJLoader();\n        const textureLoader = new THREE.TextureLoader();\n        const reader = new FileReader();\n        \n        reader.readAsDataURL(objFile);\n        reader.onload = () => {\n            objLoader.load(reader.result, (object) => {\n                object.traverse((child) => {\n                    if (child.isMesh) {\n                        child.castShadow = true;\n                        child.receiveShadow = true;\n                    }\n                });\n\n                const readerTexture = new FileReader();\n                readerTexture.readAsDataURL(textureFile);\n                readerTexture.onload = () => {\n                    const texture = textureLoader.load(readerTexture.result);\n                    object.traverse((child) => {\n                        if (child.isMesh) {\n                            child.material.map = texture;\n                        }\n                    });\n\n                    scene.add(object);\n                };\n            });\n        };\n\n        function animate() {\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        }\n\n        animate();\n    };\n\n    return (\n        <div>\n            <input type=\"file\" onChange={handleObjFileChange} accept=\".obj\" />\n            <input type=\"file\" onChange={handleTextureFileChange} accept=\"image/*\" />\n            <div ref={viewerRef} style={{ width: '100vw', height: '100vh' }}></div>\n        </div>\n    );\n}\n\nexport default HighQualityOBJViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}