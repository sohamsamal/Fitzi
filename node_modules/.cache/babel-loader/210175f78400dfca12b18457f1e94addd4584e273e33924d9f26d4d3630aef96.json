{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvatarCreator() {\n  _s();\n  const [file, setFile] = useState(null); // To store the selected file\n  const [gender, setGender] = useState(''); // To store the gender\n  const [heightCm, setHeightCm] = useState(''); // To store the height in cm\n  const [age, setAge] = useState(''); // To store the age\n  const [status, setStatus] = useState('Idle'); // To display the current status of the process\n  const [exportUrl, setExportUrl] = useState(''); // URL of the exported avatar model\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MDk0ODA5NDcsImlhdCI6MTcwOTQ1MjgzNywiYXV0aF90aW1lIjoxNzA5NDQ0OTQ3LCJqdGkiOiI5YmNmZWJkZS0yNTkyLTRkMGItOWY1Mi03YThmNjIwNWFiMGMiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNmIwNzcwMmYtZDNmOS00YmJlLWJkZWYtNGYyYTU5ZjMzMWQwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiNTgwN2FmZWQtZGZjMS00Y2RmLWE4NjAtYzhiYmQxOTBiNDFhIiwic2Vzc2lvbl9zdGF0ZSI6ImM5MjM1ODdkLTY5NzktNDhjYi05YmMxLTJkODg4OWNiMjA3OSIsImFjciI6IjAiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiYzkyMzU4N2QtNjk3OS00OGNiLTliYzEtMmQ4ODg5Y2IyMDc5IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiRml0emkgU3RhcnR1cCIsInByZWZlcnJlZF91c2VybmFtZSI6ImZpdHppLnN0YXJ0dXBAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkZpdHppIiwiZmFtaWx5X25hbWUiOiJTdGFydHVwIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0tJVjd4c202ZHRKSTV3SVNXbzBHV2pzTUpvMDdZWm80Sm5YdmozWENRbT1zOTYtYyIsImVtYWlsIjoiZml0emkuc3RhcnR1cEBnbWFpbC5jb20ifQ.fllWGgIwwKoDwkFl2qVPM_KQrF9fL9Oa9HJhmLeDKvXX6e-PBUCmvlWlZVoai-kyybn9owEYNQNuHgA6PhtUbKJWvxA2WFhZKcHJ0ZBtYWzj_5FWM3AaRa0o_LSR-UiLNCFw306pzNsjZl7eZDmKquM6959Ylts6JEaHxOEyjUoP2G_5kK_JPzl96g3tgkBT49osXrQGHmk3wYHK5M1eGYPOK7bbqLfjh9snASTh9ZeZUFvqvYLZvPTWPyAgi8VGhZhj0uJPZZvZK9Ib6UbubjiN0hF4GXrwWNd3wUL-ziMKpdOG2zi1PLXfbJOzKWVaJJHFR_6xjmEE5IhEfuz5TQ'; // Placeholder for the actual API token\n  const viewerRef = useRef(null); // Reference to the div where the 3D model will be displayed\n\n  // This effect loads the OBJ model once the exportUrl is set\n  useEffect(() => {\n    if (exportUrl) {\n      loadOBJModel(exportUrl);\n    }\n  }, [exportUrl]);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleGenderChange = event => {\n    setGender(event.target.value);\n  };\n  const handleHeightChange = event => {\n    setHeightCm(event.target.value);\n  };\n  const handleAgeChange = event => {\n    setAge(event.target.value);\n  };\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      // Assuming API requires a multipart/form-data for the file upload along with additional data\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('gender', gender);\n      formData.append('heightCm', heightCm);\n      formData.append('age', age);\n      const response = await axios.post('https://api.meshcapade.com/api/v1/avatars/create/from-images', formData, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      // Assuming the API response includes an avatar ID\n      return response.data.data.id;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n      throw error;\n    }\n  };\n  const getUploadLink = async avatarId => {\n    try {\n      const response = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/images`, {}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      return response.data.data.links.upload;\n    } catch (error) {\n      console.error('Error obtaining upload link:', error);\n      throw error;\n    }\n  };\n  const uploadImage = async uploadUrl => {\n    try {\n      await axios.put(uploadUrl, file, {\n        headers: {\n          'Content-Type': 'image/png'\n        }\n      });\n      setStatus('Image Uploaded. Starting Fitting Process...');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n      throw error;\n    }\n  };\n  const startFittingProcess = async avatarId => {\n    try {\n      const response = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/fit-to-images`, {/* Fitting parameters */}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.data.id; // Assuming the fitting process returns an ID to track status\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n      throw error;\n    }\n  };\n  const pollFittingStatus = async avatarId => {\n    try {\n      const response = await axios.get(`https://api.meshcapade.com/api/v1/avatars/${avatarId}`, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      const fittingStatus = response.data.data.attributes.state;\n      const detailedStatus = response.data.data.attributes.detailedStatus; // Assuming this field exists\n\n      // Update the status message to include detailed information\n      setStatus(`Fitting Process: ${fittingStatus}. Details: ${detailedStatus || 'Processing...'}`);\n      if (fittingStatus === 'READY') {\n        setStatus('Fitting Process Complete. Starting Export...');\n        startExportProcess(avatarId);\n      } else if (fittingStatus === 'ERROR') {\n        // Handle any errors that might have occurred during the fitting process\n        setStatus('Error during fitting process. Please try again.');\n      } else {\n        // Continue polling if the process is not yet complete or in an error state\n        setTimeout(() => pollFittingStatus(avatarId), 5000); // Poll every 5 seconds\n      }\n    } catch (error) {\n      console.error('Error polling fitting status:', error);\n      setStatus('Error Polling Fitting Status');\n      throw error;\n    }\n  };\n  async function startExportProcess(avatarId) {\n    const exportResponse = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/export`, {\n      format: 'obj',\n      // or 'fbx' depending on your needs\n      pose: 't'\n    }, {\n      headers: {\n        Authorization: `Bearer ${apiToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    pollExportStatus(exportResponse.data.data.id);\n  }\n  async function pollExportStatus(meshId) {\n    let isExported = false;\n    while (!isExported) {\n      const exportStatusResponse = await axios.get(`https://api.meshcapade.com/api/v1/meshes/${meshId}`, {\n        headers: {\n          Authorization: `Bearer ${apiToken}`\n        }\n      });\n      if (exportStatusResponse.data.data.attributes.state === 'READY') {\n        isExported = true;\n        setExportUrl(exportStatusResponse.data.data.attributes.url.path);\n        setStatus('Export complete. Model ready for viewing.');\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Poll every 5 seconds\n      }\n    }\n  }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please fill out all fields.');\n      return;\n    }\n    try {\n      setStatus('Processing...');\n      const newAvatarId = await createAvatar();\n      setAvatarId(newAvatarId);\n      const uploadUrl = await getUploadLink(newAvatarId);\n      await uploadImage(uploadUrl);\n      await startFittingProcess(newAvatarId);\n      pollFittingStatus(newAvatarId); // Poll the fitting status\n    } catch (error) {\n      console.error('Error in the process:', error);\n      setStatus('Error in Process');\n    }\n  };\n  function loadOBJModel(url) {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xcccccc); // Change background to a lighter color\n\n    const camera = new THREE.PerspectiveCamera(75, viewerRef.current.clientWidth / viewerRef.current.clientHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10); // Adjust camera position\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(viewerRef.current.clientWidth, viewerRef.current.clientHeight);\n    viewerRef.current.appendChild(renderer.domElement);\n\n    // Add lighting\n    const ambientLight = new THREE.AmbientLight(0x404040); // Soft white light\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1); // Default white light\n    directionalLight.position.set(0, 1, 1).normalize();\n    scene.add(directionalLight);\n    new OrbitControls(camera, renderer.domElement);\n    new OBJLoader().load(url, obj => {\n      obj.position.set(0, 0, 0); // Ensure model is centered\n      scene.add(obj);\n      animate();\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gender,\n        onChange: handleGenderChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Height in cm\",\n        value: heightCm,\n        onChange: handleHeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Age\",\n        value: age,\n        onChange: handleAgeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: viewerRef,\n      style: {\n        width: '600px',\n        height: '400px',\n        background: '#aaa'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 3\n  }, this);\n}\n_s(AvatarCreator, \"gd0U+lU+66BBX/e7JFLDmcYP7/A=\");\n_c = AvatarCreator;\nexport default AvatarCreator;\nvar _c;\n$RefreshReg$(_c, \"AvatarCreator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","THREE","OBJLoader","OrbitControls","jsxDEV","_jsxDEV","AvatarCreator","_s","file","setFile","gender","setGender","heightCm","setHeightCm","age","setAge","status","setStatus","exportUrl","setExportUrl","apiToken","viewerRef","loadOBJModel","handleFileChange","event","target","files","handleGenderChange","value","handleHeightChange","handleAgeChange","createAvatar","formData","FormData","append","response","post","headers","data","id","error","console","getUploadLink","avatarId","links","upload","uploadImage","uploadUrl","put","startFittingProcess","pollFittingStatus","get","fittingStatus","attributes","state","detailedStatus","startExportProcess","setTimeout","exportResponse","format","pose","Authorization","pollExportStatus","meshId","isExported","exportStatusResponse","url","path","Promise","resolve","handleSubmit","preventDefault","alert","newAvatarId","setAvatarId","scene","Scene","background","Color","camera","PerspectiveCamera","current","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","setSize","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","normalize","load","obj","animate","requestAnimationFrame","render","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","ref","style","width","height","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nfunction AvatarCreator() {\n  const [file, setFile] = useState(null); // To store the selected file\n  const [gender, setGender] = useState(''); // To store the gender\n  const [heightCm, setHeightCm] = useState(''); // To store the height in cm\n  const [age, setAge] = useState(''); // To store the age\n  const [status, setStatus] = useState('Idle'); // To display the current status of the process\n  const [exportUrl, setExportUrl] = useState(''); // URL of the exported avatar model\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MDk0ODA5NDcsImlhdCI6MTcwOTQ1MjgzNywiYXV0aF90aW1lIjoxNzA5NDQ0OTQ3LCJqdGkiOiI5YmNmZWJkZS0yNTkyLTRkMGItOWY1Mi03YThmNjIwNWFiMGMiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNmIwNzcwMmYtZDNmOS00YmJlLWJkZWYtNGYyYTU5ZjMzMWQwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiNTgwN2FmZWQtZGZjMS00Y2RmLWE4NjAtYzhiYmQxOTBiNDFhIiwic2Vzc2lvbl9zdGF0ZSI6ImM5MjM1ODdkLTY5NzktNDhjYi05YmMxLTJkODg4OWNiMjA3OSIsImFjciI6IjAiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiYzkyMzU4N2QtNjk3OS00OGNiLTliYzEtMmQ4ODg5Y2IyMDc5IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiRml0emkgU3RhcnR1cCIsInByZWZlcnJlZF91c2VybmFtZSI6ImZpdHppLnN0YXJ0dXBAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkZpdHppIiwiZmFtaWx5X25hbWUiOiJTdGFydHVwIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0tJVjd4c202ZHRKSTV3SVNXbzBHV2pzTUpvMDdZWm80Sm5YdmozWENRbT1zOTYtYyIsImVtYWlsIjoiZml0emkuc3RhcnR1cEBnbWFpbC5jb20ifQ.fllWGgIwwKoDwkFl2qVPM_KQrF9fL9Oa9HJhmLeDKvXX6e-PBUCmvlWlZVoai-kyybn9owEYNQNuHgA6PhtUbKJWvxA2WFhZKcHJ0ZBtYWzj_5FWM3AaRa0o_LSR-UiLNCFw306pzNsjZl7eZDmKquM6959Ylts6JEaHxOEyjUoP2G_5kK_JPzl96g3tgkBT49osXrQGHmk3wYHK5M1eGYPOK7bbqLfjh9snASTh9ZeZUFvqvYLZvPTWPyAgi8VGhZhj0uJPZZvZK9Ib6UbubjiN0hF4GXrwWNd3wUL-ziMKpdOG2zi1PLXfbJOzKWVaJJHFR_6xjmEE5IhEfuz5TQ'; // Placeholder for the actual API token\n  const viewerRef = useRef(null); // Reference to the div where the 3D model will be displayed\n\n  // This effect loads the OBJ model once the exportUrl is set\n  useEffect(() => {\n    if (exportUrl) {\n      loadOBJModel(exportUrl);\n    }\n  }, [exportUrl]);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleGenderChange = (event) => {\n    setGender(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeightCm(event.target.value);\n  };\n\n  const handleAgeChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      // Assuming API requires a multipart/form-data for the file upload along with additional data\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('gender', gender);\n      formData.append('heightCm', heightCm);\n      formData.append('age', age);\n\n      const response = await axios.post(\n        'https://api.meshcapade.com/api/v1/avatars/create/from-images',\n        formData, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      // Assuming the API response includes an avatar ID\n      return response.data.data.id;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n      throw error;\n    }\n  };\n\n\n  const getUploadLink = async (avatarId) => {\n    try {\n      const response = await axios.post(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}/images`, {}, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      return response.data.data.links.upload;\n    } catch (error) {\n      console.error('Error obtaining upload link:', error);\n      throw error;\n    }\n  };\n\n  const uploadImage = async (uploadUrl) => {\n    try {\n      await axios.put(uploadUrl, file, { headers: { 'Content-Type': 'image/png' } });\n      setStatus('Image Uploaded. Starting Fitting Process...');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n      throw error;\n    }\n  };\n\n  const startFittingProcess = async (avatarId) => {\n    try {\n      const response = await axios.post(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}/fit-to-images`,\n        { /* Fitting parameters */ },\n        { headers: { 'Authorization': `Bearer ${apiToken}`, 'Content-Type': 'application/json' } }\n      );\n      return response.data.data.id; // Assuming the fitting process returns an ID to track status\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n      throw error;\n    }\n  };\n\n  const pollFittingStatus = async (avatarId) => {\n    try {\n      const response = await axios.get(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}`, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      const fittingStatus = response.data.data.attributes.state;\n      const detailedStatus = response.data.data.attributes.detailedStatus; // Assuming this field exists\n      \n      // Update the status message to include detailed information\n      setStatus(`Fitting Process: ${fittingStatus}. Details: ${detailedStatus || 'Processing...'}`);\n  \n      if (fittingStatus === 'READY') {\n        setStatus('Fitting Process Complete. Starting Export...');\n        startExportProcess(avatarId);\n      } else if (fittingStatus === 'ERROR') {\n        // Handle any errors that might have occurred during the fitting process\n        setStatus('Error during fitting process. Please try again.');\n      } else {\n        // Continue polling if the process is not yet complete or in an error state\n        setTimeout(() => pollFittingStatus(avatarId), 5000); // Poll every 5 seconds\n      }\n    } catch (error) {\n      console.error('Error polling fitting status:', error);\n      setStatus('Error Polling Fitting Status');\n      throw error;\n    }\n  };\n  \n\n  async function startExportProcess(avatarId) {\n    const exportResponse = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/export`, {\n        format: 'obj', // or 'fbx' depending on your needs\n        pose: 't',\n    }, {\n        headers: { Authorization: `Bearer ${apiToken}`, 'Content-Type': 'application/json' },\n    });\n    pollExportStatus(exportResponse.data.data.id);\n}\n\nasync function pollExportStatus(meshId) {\n    let isExported = false;\n    while (!isExported) {\n        const exportStatusResponse = await axios.get(`https://api.meshcapade.com/api/v1/meshes/${meshId}`, {\n            headers: { Authorization: `Bearer ${apiToken}` },\n        });\n        if (exportStatusResponse.data.data.attributes.state === 'READY') {\n            isExported = true;\n            setExportUrl(exportStatusResponse.data.data.attributes.url.path);\n            setStatus('Export complete. Model ready for viewing.');\n        } else {\n            await new Promise(resolve => setTimeout(resolve, 5000)); // Poll every 5 seconds\n        }\n    }\n}\n\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please fill out all fields.');\n      return;\n    }\n\n    try {\n      setStatus('Processing...');\n      const newAvatarId = await createAvatar();\n      setAvatarId(newAvatarId);\n      const uploadUrl = await getUploadLink(newAvatarId);\n      await uploadImage(uploadUrl);\n      await startFittingProcess(newAvatarId);\n      pollFittingStatus(newAvatarId); // Poll the fitting status\n    } catch (error) {\n      console.error('Error in the process:', error);\n      setStatus('Error in Process');\n    }\n  };\n\n  function loadOBJModel(url) {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xcccccc); // Change background to a lighter color\n\n    const camera = new THREE.PerspectiveCamera(75, viewerRef.current.clientWidth / viewerRef.current.clientHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10); // Adjust camera position\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(viewerRef.current.clientWidth, viewerRef.current.clientHeight);\n    viewerRef.current.appendChild(renderer.domElement);\n\n    // Add lighting\n    const ambientLight = new THREE.AmbientLight(0x404040); // Soft white light\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1); // Default white light\n    directionalLight.position.set(0, 1, 1).normalize();\n    scene.add(directionalLight);\n\n    new OrbitControls(camera, renderer.domElement);\n\n    new OBJLoader().load(url, (obj) => {\n        obj.position.set(0, 0, 0); // Ensure model is centered\n        scene.add(obj);\n        animate();\n    });\n\n    function animate() {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n    }\n}\n\n\nreturn (\n  <div>\n      <form onSubmit={handleSubmit}>\n          <input type=\"file\" onChange={handleFileChange} />\n          <select value={gender} onChange={handleGenderChange}>\n            <option value=\"\">Select Gender</option>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n          <input type=\"number\" placeholder=\"Height in cm\" value={heightCm} onChange={handleHeightChange} />\n          <input type=\"number\" placeholder=\"Age\" value={age} onChange={handleAgeChange} />\n          <button type=\"submit\">Create Avatar</button>\n      </form>\n      <div>Status: {status}</div>\n      <div ref={viewerRef} style={{ width: '600px', height: '400px', background: '#aaa' }}></div>\n  </div>\n);\n}\n\nexport default AvatarCreator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}