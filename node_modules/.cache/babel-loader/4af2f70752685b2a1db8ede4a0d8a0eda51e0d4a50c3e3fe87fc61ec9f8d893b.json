{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FaceSwap() {\n  _s();\n  const [sourceImage, setSourceImage] = useState(null);\n  const [resultImage, setResultImage] = useState(null);\n  const targetImageUrl = 'https://i.ibb.co/6XkxwPM/male-dark.png'; // Direct link to the image\n\n  const handleImageChange = e => {\n    setSourceImage(e.target.files[0]);\n  };\n  const fetchImageAsBlob = async imageUrl => {\n    const response = await fetch(imageUrl);\n    const imageBlob = await response.blob();\n    return new File([imageBlob], 'target.jpg', {\n      type: 'image/jpeg'\n    });\n  };\n  const performFaceSwap = async () => {\n    try {\n      // Step 1: Fetch target image as Blob\n      const targetImageBlob = await fetchImageAsBlob(targetImageUrl);\n\n      // Step 2: Upload source image with /saveid\n      let formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', sourceImage);\n      await axios.post('https://api.useapi.net/v1/faceswap/saveid', formData, {\n        headers: {\n          'Authorization': 'Bearer user:893-aelqV9NKacC4TTkmhVc1l',\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Step 3: Perform swap with /swapid using the target image blob\n      formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', targetImageBlob);\n      const response = await axios.post('https://api.useapi.net/v1/faceswap/swapid', formData, {\n        headers: {\n          'Authorization': 'Bearer user:893-aelqV9NKacC4TTkmhVc1l',\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Step 4: Set the result image for display and download\n      if (response.data && response.data.attachments.length > 0) {\n        setResultImage(response.data.attachments[0].url);\n      }\n    } catch (error) {\n      console.error('Face swap error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: performFaceSwap,\n      children: \"Perform Face Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), resultImage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: resultImage,\n        alt: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: resultImage,\n        download: \"faceswap_result.png\",\n        children: \"Download Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(FaceSwap, \"5u3k9a4ys0LgfDHN7FwDzY/Qpgw=\");\n_c = FaceSwap;\nexport default FaceSwap;\nvar _c;\n$RefreshReg$(_c, \"FaceSwap\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","FaceSwap","_s","sourceImage","setSourceImage","resultImage","setResultImage","targetImageUrl","handleImageChange","e","target","files","fetchImageAsBlob","imageUrl","response","fetch","imageBlob","blob","File","type","performFaceSwap","targetImageBlob","formData","FormData","append","post","headers","data","attachments","length","url","error","console","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","href","download","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction FaceSwap() {\n  const [sourceImage, setSourceImage] = useState(null);\n  const [resultImage, setResultImage] = useState(null);\n  const targetImageUrl = 'https://i.ibb.co/6XkxwPM/male-dark.png'; // Direct link to the image\n\n  const handleImageChange = (e) => {\n    setSourceImage(e.target.files[0]);\n  };\n\n  const fetchImageAsBlob = async (imageUrl) => {\n    const response = await fetch(imageUrl);\n    const imageBlob = await response.blob();\n    return new File([imageBlob], 'target.jpg', { type: 'image/jpeg' });\n  };\n\n  const performFaceSwap = async () => {\n    try {\n      // Step 1: Fetch target image as Blob\n      const targetImageBlob = await fetchImageAsBlob(targetImageUrl);\n\n      // Step 2: Upload source image with /saveid\n      let formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', sourceImage);\n      await axios.post('https://api.useapi.net/v1/faceswap/saveid', formData, {\n        headers: {\n          'Authorization': 'Bearer user:893-aelqV9NKacC4TTkmhVc1l',\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Step 3: Perform swap with /swapid using the target image blob\n      formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', targetImageBlob);\n      const response = await axios.post('https://api.useapi.net/v1/faceswap/swapid', formData, {\n        headers: {\n          'Authorization': 'Bearer user:893-aelqV9NKacC4TTkmhVc1l',\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Step 4: Set the result image for display and download\n      if (response.data && response.data.attachments.length > 0) {\n        setResultImage(response.data.attachments[0].url);\n      }\n    } catch (error) {\n      console.error('Face swap error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleImageChange} />\n      <button onClick={performFaceSwap}>Perform Face Swap</button>\n      {resultImage && (\n        <>\n          <img src={resultImage} alt=\"Result\" />\n          <a href={resultImage} download=\"faceswap_result.png\">Download Result</a>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FaceSwap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}