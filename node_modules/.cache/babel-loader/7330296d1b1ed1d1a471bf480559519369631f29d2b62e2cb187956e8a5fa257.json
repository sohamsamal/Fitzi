{"ast":null,"code":"var _jsxFileName = \"/Users/ssamal/Desktop/my-meshcapade-app/src/Export.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportAvatar = ({\n  assetID,\n  authToken\n}) => {\n  _s();\n  const [exportStatus, setExportStatus] = useState('');\n  const triggerExport = async () => {\n    try {\n      const exportResponse = await axios.post(`https://api.meshcapade.com/avatars/${assetID}/export`, {/* body parameters, if any, like format and pose */}, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      const meshID = exportResponse.data.id; // Assuming the response includes an ID for the mesh\n      checkExportStatus(meshID);\n    } catch (error) {\n      console.error('Error triggering export:', error);\n    }\n  };\n  const checkExportStatus = async meshID => {\n    try {\n      let status = '';\n      do {\n        const statusResponse = await axios.get(`https://api.meshcapade.com/meshes/${meshID}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        status = statusResponse.data.status;\n        setExportStatus(status);\n        if (status !== 'READY') {\n          await new Promise(resolve => setTimeout(resolve, 5000)); // Wait for 5 seconds before checking again\n        }\n      } while (status !== 'READY');\n      if (status === 'READY') {\n        downloadExportedAvatar(statusResponse.data.url);\n      }\n    } catch (error) {\n      console.error('Error checking export status:', error);\n    }\n  };\n  const downloadExportedAvatar = downloadUrl => {\n    window.location.href = downloadUrl; // Simple way to trigger download, or implement your own method\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: triggerExport,\n      children: \"Export Avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Export Status: \", exportStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ExportAvatar, \"X8HbZkfgg2Qw2OnJKkqxSnN1I/k=\");\n_c = ExportAvatar;\nexport default ExportAvatar;\nvar _c;\n$RefreshReg$(_c, \"ExportAvatar\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ExportAvatar","assetID","authToken","_s","exportStatus","setExportStatus","triggerExport","exportResponse","post","headers","Authorization","meshID","data","id","checkExportStatus","error","console","status","statusResponse","get","Promise","resolve","setTimeout","downloadExportedAvatar","url","downloadUrl","window","location","href","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ssamal/Desktop/my-meshcapade-app/src/Export.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ExportAvatar = ({ assetID, authToken }) => {\n  const [exportStatus, setExportStatus] = useState('');\n\n  const triggerExport = async () => {\n    try {\n      const exportResponse = await axios.post(\n        `https://api.meshcapade.com/avatars/${assetID}/export`,\n        { /* body parameters, if any, like format and pose */ },\n        { headers: { Authorization: `Bearer ${authToken}` } }\n      );\n      const meshID = exportResponse.data.id; // Assuming the response includes an ID for the mesh\n      checkExportStatus(meshID);\n    } catch (error) {\n      console.error('Error triggering export:', error);\n    }\n  };\n\n  const checkExportStatus = async (meshID) => {\n    try {\n      let status = '';\n      do {\n        const statusResponse = await axios.get(\n          `https://api.meshcapade.com/meshes/${meshID}`,\n          { headers: { Authorization: `Bearer ${authToken}` } }\n        );\n        status = statusResponse.data.status;\n        setExportStatus(status);\n        if (status !== 'READY') {\n          await new Promise(resolve => setTimeout(resolve, 5000)); // Wait for 5 seconds before checking again\n        }\n      } while (status !== 'READY');\n\n      if (status === 'READY') {\n        downloadExportedAvatar(statusResponse.data.url);\n      }\n    } catch (error) {\n      console.error('Error checking export status:', error);\n    }\n  };\n\n  const downloadExportedAvatar = (downloadUrl) => {\n    window.location.href = downloadUrl; // Simple way to trigger download, or implement your own method\n  };\n\n  return (\n    <div>\n      <button onClick={triggerExport}>Export Avatar</button>\n      <p>Export Status: {exportStatus}</p>\n    </div>\n  );\n};\n\nexport default ExportAvatar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMV,KAAK,CAACW,IAAI,CACpC,sCAAqCP,OAAQ,SAAQ,EACtD,CAAE,oDAAqD,EACvD;QAAEQ,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASR,SAAU;QAAE;MAAE,CACtD,CAAC;MACD,MAAMS,MAAM,GAAGJ,cAAc,CAACK,IAAI,CAACC,EAAE,CAAC,CAAC;MACvCC,iBAAiB,CAACH,MAAM,CAAC;IAC3B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMD,iBAAiB,GAAG,MAAOH,MAAM,IAAK;IAC1C,IAAI;MACF,IAAIM,MAAM,GAAG,EAAE;MACf,GAAG;QACD,MAAMC,cAAc,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CACnC,qCAAoCR,MAAO,EAAC,EAC7C;UAAEF,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASR,SAAU;UAAE;QAAE,CACtD,CAAC;QACDe,MAAM,GAAGC,cAAc,CAACN,IAAI,CAACK,MAAM;QACnCZ,eAAe,CAACY,MAAM,CAAC;QACvB,IAAIA,MAAM,KAAK,OAAO,EAAE;UACtB,MAAM,IAAIG,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3D;MACF,CAAC,QAAQJ,MAAM,KAAK,OAAO;MAE3B,IAAIA,MAAM,KAAK,OAAO,EAAE;QACtBM,sBAAsB,CAACL,cAAc,CAACN,IAAI,CAACY,GAAG,CAAC;MACjD;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAMQ,sBAAsB,GAAIE,WAAW,IAAK;IAC9CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,WAAW,CAAC,CAAC;EACtC,CAAC;EAED,oBACE1B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAQ+B,OAAO,EAAExB,aAAc;MAAAuB,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtDnC,OAAA;MAAA8B,QAAA,GAAG,iBAAe,EAACzB,YAAY;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlDIH,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}