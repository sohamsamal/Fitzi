{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvatarCreator() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [avatarName, setAvatarName] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [gender, setGender] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [avatarId, setAvatarId] = useState('');\n  const [exportUrl, setExportUrl] = useState('');\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MDk5NjQwMDAsImlhdCI6MTcwOTkyODAwMSwiYXV0aF90aW1lIjoxNzA5OTI4MDAwLCJqdGkiOiJjNWNlNTAwNS0xY2IwLTQwMzMtYmU1OC0xYWI5NGJkY2U1ZmUiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNmIwNzcwMmYtZDNmOS00YmJlLWJkZWYtNGYyYTU5ZjMzMWQwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiYWVjZjIwYzQtYmJjNy00ODk5LTgwZDAtZmQwNTg2YmZhYmIzIiwic2Vzc2lvbl9zdGF0ZSI6IjI5OWM3YjQzLTdlYTMtNDY2Yi1iMTllLTc1MWEyMDU2NDQwZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjk5YzdiNDMtN2VhMy00NjZiLWIxOWUtNzUxYTIwNTY0NDBlIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiRml0emkgU3RhcnR1cCIsInByZWZlcnJlZF91c2VybmFtZSI6ImZpdHppLnN0YXJ0dXBAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkZpdHppIiwiZmFtaWx5X25hbWUiOiJTdGFydHVwIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0tJVjd4c202ZHRKSTV3SVNXbzBHV2pzTUpvMDdZWm80Sm5YdmozWENRbT1zOTYtYyIsImVtYWlsIjoiZml0emkuc3RhcnR1cEBnbWFpbC5jb20ifQ.klVMKN535vO8z_VSlUwjOlkSwapqaQHYBmZGxSxbpKESrVJsMCGCF9ZyiCNrrHE_kT1HX2mkkSvAk2n3vMg0kuKEIxrtH1TFZBz8185SgTobsOLnEIZN6tqyvkh3FzOhBLum2e8KVlzftRN6FmV3JhYrhtE69XY1Sxe-qahXWQw536uX-oIltBj8lYd1aSxpgpSFrb_AafJmQ8i8wR6mgayoQx1AuNkeND4EX2Dmw6BmHjfTEZroQVCE9qgdY2pWbeNHuPAUATDBFHwQBa80b0Zm4Fn6sF4amsW-Cl3j2nJB_QU-aoqLzqlwKqATBC6yYZ6Bl6Ohpun_BX20BV9Btg';\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    if (exportUrl) {\n      loadOBJModel(exportUrl);\n    }\n  }, [exportUrl]);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      const response = await axios.post('https://api.meshcapade.com/api/v1/avatars/create/from-images', {}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      setAvatarId(response.data.data.id);\n      return response.data.data.id;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n      throw error;\n    }\n  };\n  const getUploadLink = async avatarId => {\n    try {\n      const response = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/images`, {}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      return response.data.data.links.upload;\n    } catch (error) {\n      console.error('Error obtaining upload link:', error);\n      throw error;\n    }\n  };\n  const uploadImage = async uploadUrl => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.put(uploadUrl, file, {\n        headers: {\n          'Content-Type': 'image/png'\n        }\n      });\n      setStatus('Image Uploaded. Starting Fitting Process...');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n      throw error;\n    }\n  };\n  const startFittingProcess = async avatarId => {\n    try {\n      const response = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/fit-to-images`, {\n        avatarname: avatarName,\n        height: parseInt(height),\n        weight: parseInt(weight),\n        gender: gender\n      }, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      pollFittingStatus(avatarId); // Start polling for fitting status right after initiating the fitting process\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n      throw error;\n    }\n  };\n  const pollFittingStatus = async avatarId => {\n    try {\n      const response = await axios.get(`https://api.meshcapade.com/api/v1/avatars/${avatarId}`, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      const fittingStatus = response.data.data.attributes.state;\n      const detailedStatus = response.data.data.attributes.detailedStatus; // Assuming this field exists\n\n      // Update the status message to include detailed information\n      setStatus(`Fitting Process: ${fittingStatus}. Details: ${detailedStatus || 'Processing...'}`);\n      if (fittingStatus === 'READY') {\n        setStatus('Fitting Process Complete. Starting Export...');\n        startExportProcess(avatarId);\n      } else if (fittingStatus === 'ERROR') {\n        // Handle any errors that might have occurred during the fitting process\n        setStatus('Error during fitting process. Please try again.');\n      } else {\n        // Continue polling if the process is not yet complete or in an error state\n        setTimeout(() => pollFittingStatus(avatarId), 5000); // Poll every 5 seconds\n      }\n    } catch (error) {\n      console.error('Error polling fitting status:', error);\n      setStatus('Error Polling Fitting Status');\n      throw error;\n    }\n  };\n  async function startExportProcess(avatarId) {\n    const exportResponse = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/export`, {\n      format: 'obj',\n      // or 'fbx' depending on your needs\n      pose: 't'\n    }, {\n      headers: {\n        Authorization: `Bearer ${apiToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    pollExportStatus(exportResponse.data.data.id);\n  }\n  async function pollExportStatus(meshId) {\n    let isExported = false;\n    while (!isExported) {\n      const exportStatusResponse = await axios.get(`https://api.meshcapade.com/api/v1/meshes/${meshId}`, {\n        headers: {\n          Authorization: `Bearer ${apiToken}`\n        }\n      });\n      if (exportStatusResponse.data.data.attributes.state === 'READY') {\n        isExported = true;\n        setExportUrl(exportStatusResponse.data.data.attributes.url.path);\n        setStatus('Export complete. Model ready for viewing.');\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Poll every 5 seconds\n      }\n    }\n  }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file || !gender || !height || !weight || !avatarName) {\n      alert('Please fill all fields.');\n      return;\n    }\n    setStatus('Processing...');\n    try {\n      const newAvatarId = await createAvatar();\n      const uploadUrl = await getUploadLink(newAvatarId);\n      await uploadImage(uploadUrl);\n      await startFittingProcess(newAvatarId); // Pass additional parameters to the fitting process\n    } catch (error) {\n      console.error('Error in the process:', error);\n      setStatus('Error in Process');\n    }\n  };\n  function loadOBJModel(url) {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xcccccc); // Change background to a lighter color\n\n    const camera = new THREE.PerspectiveCamera(75, viewerRef.current.clientWidth / viewerRef.current.clientHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10); // Adjust camera position\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(viewerRef.current.clientWidth, viewerRef.current.clientHeight);\n    viewerRef.current.appendChild(renderer.domElement);\n\n    // Add lighting\n    const ambientLight = new THREE.AmbientLight(0x404040); // Soft white light\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1); // Default white light\n    directionalLight.position.set(0, 1, 1).normalize();\n    scene.add(directionalLight);\n    new OrbitControls(camera, renderer.domElement);\n    new OBJLoader().load(url, obj => {\n      obj.position.set(0, 0, 0); // Ensure model is centered\n      scene.add(obj);\n      animate();\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Avatar Name\",\n        value: avatarName,\n        onChange: e => setAvatarName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gender,\n        onChange: e => setGender(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"neutral\",\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Height in cm\",\n        value: height,\n        onChange: e => setHeight(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Weight in kg\",\n        value: weight,\n        onChange: e => setWeight(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: viewerRef,\n      style: {\n        width: '600px',\n        height: '400px',\n        background: '#aaa'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 3\n  }, this);\n}\n_s(AvatarCreator, \"hQdhvzbW1XI/P4qSvOfN9ElVhpM=\");\n_c = AvatarCreator;\nexport default AvatarCreator;\nvar _c;\n$RefreshReg$(_c, \"AvatarCreator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","THREE","OBJLoader","OrbitControls","jsxDEV","_jsxDEV","AvatarCreator","_s","file","setFile","avatarName","setAvatarName","height","setHeight","weight","setWeight","gender","setGender","status","setStatus","avatarId","setAvatarId","exportUrl","setExportUrl","apiToken","viewerRef","loadOBJModel","handleFileChange","event","target","files","createAvatar","response","post","headers","data","id","error","console","getUploadLink","links","upload","uploadImage","uploadUrl","formData","FormData","append","put","startFittingProcess","avatarname","parseInt","pollFittingStatus","get","fittingStatus","attributes","state","detailedStatus","startExportProcess","setTimeout","exportResponse","format","pose","Authorization","pollExportStatus","meshId","isExported","exportStatusResponse","url","path","Promise","resolve","handleSubmit","preventDefault","alert","newAvatarId","scene","Scene","background","Color","camera","PerspectiveCamera","current","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","setSize","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","normalize","load","obj","animate","requestAnimationFrame","render","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","e","ref","style","width","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nfunction AvatarCreator() {\n  const [file, setFile] = useState(null);\n  const [avatarName, setAvatarName] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [gender, setGender] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [avatarId, setAvatarId] = useState('');\n  const [exportUrl, setExportUrl] = useState('');\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MDk5NjQwMDAsImlhdCI6MTcwOTkyODAwMSwiYXV0aF90aW1lIjoxNzA5OTI4MDAwLCJqdGkiOiJjNWNlNTAwNS0xY2IwLTQwMzMtYmU1OC0xYWI5NGJkY2U1ZmUiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNmIwNzcwMmYtZDNmOS00YmJlLWJkZWYtNGYyYTU5ZjMzMWQwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiYWVjZjIwYzQtYmJjNy00ODk5LTgwZDAtZmQwNTg2YmZhYmIzIiwic2Vzc2lvbl9zdGF0ZSI6IjI5OWM3YjQzLTdlYTMtNDY2Yi1iMTllLTc1MWEyMDU2NDQwZSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjk5YzdiNDMtN2VhMy00NjZiLWIxOWUtNzUxYTIwNTY0NDBlIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiRml0emkgU3RhcnR1cCIsInByZWZlcnJlZF91c2VybmFtZSI6ImZpdHppLnN0YXJ0dXBAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkZpdHppIiwiZmFtaWx5X25hbWUiOiJTdGFydHVwIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0tJVjd4c202ZHRKSTV3SVNXbzBHV2pzTUpvMDdZWm80Sm5YdmozWENRbT1zOTYtYyIsImVtYWlsIjoiZml0emkuc3RhcnR1cEBnbWFpbC5jb20ifQ.klVMKN535vO8z_VSlUwjOlkSwapqaQHYBmZGxSxbpKESrVJsMCGCF9ZyiCNrrHE_kT1HX2mkkSvAk2n3vMg0kuKEIxrtH1TFZBz8185SgTobsOLnEIZN6tqyvkh3FzOhBLum2e8KVlzftRN6FmV3JhYrhtE69XY1Sxe-qahXWQw536uX-oIltBj8lYd1aSxpgpSFrb_AafJmQ8i8wR6mgayoQx1AuNkeND4EX2Dmw6BmHjfTEZroQVCE9qgdY2pWbeNHuPAUATDBFHwQBa80b0Zm4Fn6sF4amsW-Cl3j2nJB_QU-aoqLzqlwKqATBC6yYZ6Bl6Ohpun_BX20BV9Btg';\n  const viewerRef = useRef(null);\n\n  useEffect(() => {\n    if (exportUrl) {\n      loadOBJModel(exportUrl);\n    }\n  }, [exportUrl]);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      const response = await axios.post(\n        'https://api.meshcapade.com/api/v1/avatars/create/from-images', {}, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      setAvatarId(response.data.data.id);\n      return response.data.data.id;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n      throw error;\n    }\n  };\n\n  const getUploadLink = async (avatarId) => {\n    try {\n      const response = await axios.post(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}/images`, {}, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      return response.data.data.links.upload;\n    } catch (error) {\n      console.error('Error obtaining upload link:', error);\n      throw error;\n    }\n  };\n\n  const uploadImage = async (uploadUrl) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.put(uploadUrl, file, { headers: { 'Content-Type': 'image/png' } });\n      setStatus('Image Uploaded. Starting Fitting Process...');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n      throw error;\n    }\n  };\n\n  const startFittingProcess = async (avatarId) => {\n    try {\n      const response = await axios.post(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}/fit-to-images`,\n        {\n          avatarname: avatarName,\n          height: parseInt(height),\n          weight: parseInt(weight),\n          gender: gender\n        },\n        { headers: { 'Authorization': `Bearer ${apiToken}`, 'Content-Type': 'application/json' } }\n      );\n      pollFittingStatus(avatarId); // Start polling for fitting status right after initiating the fitting process\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n      throw error;\n    }\n  };\n\n  const pollFittingStatus = async (avatarId) => {\n    try {\n      const response = await axios.get(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}`, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      const fittingStatus = response.data.data.attributes.state;\n      const detailedStatus = response.data.data.attributes.detailedStatus; // Assuming this field exists\n      \n      // Update the status message to include detailed information\n      setStatus(`Fitting Process: ${fittingStatus}. Details: ${detailedStatus || 'Processing...'}`);\n  \n      if (fittingStatus === 'READY') {\n        setStatus('Fitting Process Complete. Starting Export...');\n        startExportProcess(avatarId);\n      } else if (fittingStatus === 'ERROR') {\n        // Handle any errors that might have occurred during the fitting process\n        setStatus('Error during fitting process. Please try again.');\n      } else {\n        // Continue polling if the process is not yet complete or in an error state\n        setTimeout(() => pollFittingStatus(avatarId), 5000); // Poll every 5 seconds\n      }\n    } catch (error) {\n      console.error('Error polling fitting status:', error);\n      setStatus('Error Polling Fitting Status');\n      throw error;\n    }\n  };\n  \n\n  async function startExportProcess(avatarId) {\n    const exportResponse = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/export`, {\n        format: 'obj', // or 'fbx' depending on your needs\n        pose: 't',\n    }, {\n        headers: { Authorization: `Bearer ${apiToken}`, 'Content-Type': 'application/json' },\n    });\n    pollExportStatus(exportResponse.data.data.id);\n}\n\nasync function pollExportStatus(meshId) {\n    let isExported = false;\n    while (!isExported) {\n        const exportStatusResponse = await axios.get(`https://api.meshcapade.com/api/v1/meshes/${meshId}`, {\n            headers: { Authorization: `Bearer ${apiToken}` },\n        });\n        if (exportStatusResponse.data.data.attributes.state === 'READY') {\n            isExported = true;\n            setExportUrl(exportStatusResponse.data.data.attributes.url.path);\n            setStatus('Export complete. Model ready for viewing.');\n        } else {\n            await new Promise(resolve => setTimeout(resolve, 5000)); // Poll every 5 seconds\n        }\n    }\n}\n\n\nconst handleSubmit = async (event) => {\n  event.preventDefault();\n  if (!file || !gender || !height || !weight || !avatarName) {\n    alert('Please fill all fields.');\n    return;\n  }\n\n  setStatus('Processing...');\n  try {\n    const newAvatarId = await createAvatar();\n    const uploadUrl = await getUploadLink(newAvatarId);\n    await uploadImage(uploadUrl);\n    await startFittingProcess(newAvatarId); // Pass additional parameters to the fitting process\n  } catch (error) {\n    console.error('Error in the process:', error);\n    setStatus('Error in Process');\n  }\n};\n\n\nfunction loadOBJModel(url) {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xcccccc); // Change background to a lighter color\n\n    const camera = new THREE.PerspectiveCamera(75, viewerRef.current.clientWidth / viewerRef.current.clientHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10); // Adjust camera position\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(viewerRef.current.clientWidth, viewerRef.current.clientHeight);\n    viewerRef.current.appendChild(renderer.domElement);\n\n    // Add lighting\n    const ambientLight = new THREE.AmbientLight(0x404040); // Soft white light\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1); // Default white light\n    directionalLight.position.set(0, 1, 1).normalize();\n    scene.add(directionalLight);\n\n    new OrbitControls(camera, renderer.domElement);\n\n    new OBJLoader().load(url, (obj) => {\n        obj.position.set(0, 0, 0); // Ensure model is centered\n        scene.add(obj);\n        animate();\n    });\n\n    function animate() {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n    }\n}\n\n\nreturn (\n  <div>\n      <form onSubmit={handleSubmit}>\n          <input type=\"file\" onChange={handleFileChange} />\n          <input type=\"text\" placeholder=\"Avatar Name\" value={avatarName} onChange={(e) => setAvatarName(e.target.value)} />\n          <select value={gender} onChange={(e) => setGender(e.target.value)}>\n            <option value=\"\">Select Gender</option>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"neutral\">Neutral</option>\n          </select>\n          <input type=\"number\" placeholder=\"Height in cm\" value={height} onChange={(e) => setHeight(e.target.value)} />\n          <input type=\"number\" placeholder=\"Weight in kg\" value={weight} onChange={(e) => setWeight(e.target.value)} />\n          <button type=\"submit\">Create Avatar</button>\n      </form>\n      <div>Status: {status}</div>\n      <div ref={viewerRef} style={{ width: '600px', height: '400px', background: '#aaa' }}></div>\n  </div>\n);\n}\n\nexport default AvatarCreator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,QAAQ,sCAAsC;AAChE,SAASC,aAAa,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM2B,QAAQ,GAAG,+vDAA+vD;EAChxD,MAAMC,SAAS,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIwB,SAAS,EAAE;MACbI,YAAY,CAACJ,SAAS,CAAC;IACzB;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAClCnB,OAAO,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BZ,SAAS,CAAC,oBAAoB,CAAC;IAC/B,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAC/B,8DAA8D,EAAE,CAAC,CAAC,EAClE;QAAEC,OAAO,EAAE;UAAE,eAAe,EAAG,UAASV,QAAS;QAAE;MAAE,CACvD,CAAC;MACDH,WAAW,CAACW,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,EAAE,CAAC;MAClC,OAAOJ,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,EAAE;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9ClB,SAAS,CAAC,uBAAuB,CAAC;MAClC,MAAMkB,KAAK;IACb;EACF,CAAC;EAED,MAAME,aAAa,GAAG,MAAOnB,QAAQ,IAAK;IACxC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAC9B,6CAA4Cb,QAAS,SAAQ,EAAE,CAAC,CAAC,EAClE;QAAEc,OAAO,EAAE;UAAE,eAAe,EAAG,UAASV,QAAS;QAAE;MAAE,CACvD,CAAC;MACD,OAAOQ,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACK,KAAK,CAACC,MAAM;IACxC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMK,WAAW,GAAG,MAAOC,SAAS,IAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtC,IAAI,CAAC;MAC7B,MAAMR,KAAK,CAAC+C,GAAG,CAACJ,SAAS,EAAEnC,IAAI,EAAE;QAAE0B,OAAO,EAAE;UAAE,cAAc,EAAE;QAAY;MAAE,CAAC,CAAC;MAC9Ef,SAAS,CAAC,6CAA6C,CAAC;IAC1D,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9ClB,SAAS,CAAC,uBAAuB,CAAC;MAClC,MAAMkB,KAAK;IACb;EACF,CAAC;EAED,MAAMW,mBAAmB,GAAG,MAAO5B,QAAQ,IAAK;IAC9C,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAC9B,6CAA4Cb,QAAS,gBAAe,EACrE;QACE6B,UAAU,EAAEvC,UAAU;QACtBE,MAAM,EAAEsC,QAAQ,CAACtC,MAAM,CAAC;QACxBE,MAAM,EAAEoC,QAAQ,CAACpC,MAAM,CAAC;QACxBE,MAAM,EAAEA;MACV,CAAC,EACD;QAAEkB,OAAO,EAAE;UAAE,eAAe,EAAG,UAASV,QAAS,EAAC;UAAE,cAAc,EAAE;QAAmB;MAAE,CAC3F,CAAC;MACD2B,iBAAiB,CAAC/B,QAAQ,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDlB,SAAS,CAAC,gCAAgC,CAAC;MAC3C,MAAMkB,KAAK;IACb;EACF,CAAC;EAED,MAAMc,iBAAiB,GAAG,MAAO/B,QAAQ,IAAK;IAC5C,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMhC,KAAK,CAACoD,GAAG,CAC7B,6CAA4ChC,QAAS,EAAC,EACvD;QAAEc,OAAO,EAAE;UAAE,eAAe,EAAG,UAASV,QAAS;QAAE;MAAE,CACvD,CAAC;MACD,MAAM6B,aAAa,GAAGrB,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACmB,UAAU,CAACC,KAAK;MACzD,MAAMC,cAAc,GAAGxB,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACmB,UAAU,CAACE,cAAc,CAAC,CAAC;;MAErE;MACArC,SAAS,CAAE,oBAAmBkC,aAAc,cAAaG,cAAc,IAAI,eAAgB,EAAC,CAAC;MAE7F,IAAIH,aAAa,KAAK,OAAO,EAAE;QAC7BlC,SAAS,CAAC,8CAA8C,CAAC;QACzDsC,kBAAkB,CAACrC,QAAQ,CAAC;MAC9B,CAAC,MAAM,IAAIiC,aAAa,KAAK,OAAO,EAAE;QACpC;QACAlC,SAAS,CAAC,iDAAiD,CAAC;MAC9D,CAAC,MAAM;QACL;QACAuC,UAAU,CAAC,MAAMP,iBAAiB,CAAC/B,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACvD;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDlB,SAAS,CAAC,8BAA8B,CAAC;MACzC,MAAMkB,KAAK;IACb;EACF,CAAC;EAGD,eAAeoB,kBAAkBA,CAACrC,QAAQ,EAAE;IAC1C,MAAMuC,cAAc,GAAG,MAAM3D,KAAK,CAACiC,IAAI,CAAE,6CAA4Cb,QAAS,SAAQ,EAAE;MACpGwC,MAAM,EAAE,KAAK;MAAE;MACfC,IAAI,EAAE;IACV,CAAC,EAAE;MACC3B,OAAO,EAAE;QAAE4B,aAAa,EAAG,UAAStC,QAAS,EAAC;QAAE,cAAc,EAAE;MAAmB;IACvF,CAAC,CAAC;IACFuC,gBAAgB,CAACJ,cAAc,CAACxB,IAAI,CAACA,IAAI,CAACC,EAAE,CAAC;EACjD;EAEA,eAAe2B,gBAAgBA,CAACC,MAAM,EAAE;IACpC,IAAIC,UAAU,GAAG,KAAK;IACtB,OAAO,CAACA,UAAU,EAAE;MAChB,MAAMC,oBAAoB,GAAG,MAAMlE,KAAK,CAACoD,GAAG,CAAE,4CAA2CY,MAAO,EAAC,EAAE;QAC/F9B,OAAO,EAAE;UAAE4B,aAAa,EAAG,UAAStC,QAAS;QAAE;MACnD,CAAC,CAAC;MACF,IAAI0C,oBAAoB,CAAC/B,IAAI,CAACA,IAAI,CAACmB,UAAU,CAACC,KAAK,KAAK,OAAO,EAAE;QAC7DU,UAAU,GAAG,IAAI;QACjB1C,YAAY,CAAC2C,oBAAoB,CAAC/B,IAAI,CAACA,IAAI,CAACmB,UAAU,CAACa,GAAG,CAACC,IAAI,CAAC;QAChEjD,SAAS,CAAC,2CAA2C,CAAC;MAC1D,CAAC,MAAM;QACH,MAAM,IAAIkD,OAAO,CAACC,OAAO,IAAIZ,UAAU,CAACY,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7D;IACJ;EACJ;EAGA,MAAMC,YAAY,GAAG,MAAO3C,KAAK,IAAK;IACpCA,KAAK,CAAC4C,cAAc,CAAC,CAAC;IACtB,IAAI,CAAChE,IAAI,IAAI,CAACQ,MAAM,IAAI,CAACJ,MAAM,IAAI,CAACE,MAAM,IAAI,CAACJ,UAAU,EAAE;MACzD+D,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IAEAtD,SAAS,CAAC,eAAe,CAAC;IAC1B,IAAI;MACF,MAAMuD,WAAW,GAAG,MAAM3C,YAAY,CAAC,CAAC;MACxC,MAAMY,SAAS,GAAG,MAAMJ,aAAa,CAACmC,WAAW,CAAC;MAClD,MAAMhC,WAAW,CAACC,SAAS,CAAC;MAC5B,MAAMK,mBAAmB,CAAC0B,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOrC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ClB,SAAS,CAAC,kBAAkB,CAAC;IAC/B;EACF,CAAC;EAGD,SAASO,YAAYA,CAACyC,GAAG,EAAE;IACvB,MAAMQ,KAAK,GAAG,IAAI1E,KAAK,CAAC2E,KAAK,CAAC,CAAC;IAC/BD,KAAK,CAACE,UAAU,GAAG,IAAI5E,KAAK,CAAC6E,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAE9C,MAAMC,MAAM,GAAG,IAAI9E,KAAK,CAAC+E,iBAAiB,CAAC,EAAE,EAAEvD,SAAS,CAACwD,OAAO,CAACC,WAAW,GAAGzD,SAAS,CAACwD,OAAO,CAACE,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC;IACzHJ,MAAM,CAACK,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAE/B,MAAMC,QAAQ,GAAG,IAAIrF,KAAK,CAACsF,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAAC/D,SAAS,CAACwD,OAAO,CAACC,WAAW,EAAEzD,SAAS,CAACwD,OAAO,CAACE,YAAY,CAAC;IAC/E1D,SAAS,CAACwD,OAAO,CAACQ,WAAW,CAACH,QAAQ,CAACI,UAAU,CAAC;;IAElD;IACA,MAAMC,YAAY,GAAG,IAAI1F,KAAK,CAAC2F,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvDjB,KAAK,CAACkB,GAAG,CAACF,YAAY,CAAC;IACvB,MAAMG,gBAAgB,GAAG,IAAI7F,KAAK,CAAC8F,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAClED,gBAAgB,CAACV,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACW,SAAS,CAAC,CAAC;IAClDrB,KAAK,CAACkB,GAAG,CAACC,gBAAgB,CAAC;IAE3B,IAAI3F,aAAa,CAAC4E,MAAM,EAAEO,QAAQ,CAACI,UAAU,CAAC;IAE9C,IAAIxF,SAAS,CAAC,CAAC,CAAC+F,IAAI,CAAC9B,GAAG,EAAG+B,GAAG,IAAK;MAC/BA,GAAG,CAACd,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3BV,KAAK,CAACkB,GAAG,CAACK,GAAG,CAAC;MACdC,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;IAEF,SAASA,OAAOA,CAAA,EAAG;MACfC,qBAAqB,CAACD,OAAO,CAAC;MAC9Bb,QAAQ,CAACe,MAAM,CAAC1B,KAAK,EAAEI,MAAM,CAAC;IAClC;EACJ;EAGA,oBACE1E,OAAA;IAAAiG,QAAA,gBACIjG,OAAA;MAAMkG,QAAQ,EAAEhC,YAAa;MAAA+B,QAAA,gBACzBjG,OAAA;QAAOmG,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAE9E;MAAiB;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDxG,OAAA;QAAOmG,IAAI,EAAC,MAAM;QAACM,WAAW,EAAC,aAAa;QAACC,KAAK,EAAErG,UAAW;QAAC+F,QAAQ,EAAGO,CAAC,IAAKrG,aAAa,CAACqG,CAAC,CAACnF,MAAM,CAACkF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClHxG,OAAA;QAAQ0G,KAAK,EAAE/F,MAAO;QAACyF,QAAQ,EAAGO,CAAC,IAAK/F,SAAS,CAAC+F,CAAC,CAACnF,MAAM,CAACkF,KAAK,CAAE;QAAAT,QAAA,gBAChEjG,OAAA;UAAQ0G,KAAK,EAAC,EAAE;UAAAT,QAAA,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCxG,OAAA;UAAQ0G,KAAK,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCxG,OAAA;UAAQ0G,KAAK,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtCxG,OAAA;UAAQ0G,KAAK,EAAC,SAAS;UAAAT,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACTxG,OAAA;QAAOmG,IAAI,EAAC,QAAQ;QAACM,WAAW,EAAC,cAAc;QAACC,KAAK,EAAEnG,MAAO;QAAC6F,QAAQ,EAAGO,CAAC,IAAKnG,SAAS,CAACmG,CAAC,CAACnF,MAAM,CAACkF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7GxG,OAAA;QAAOmG,IAAI,EAAC,QAAQ;QAACM,WAAW,EAAC,cAAc;QAACC,KAAK,EAAEjG,MAAO;QAAC2F,QAAQ,EAAGO,CAAC,IAAKjG,SAAS,CAACiG,CAAC,CAACnF,MAAM,CAACkF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7GxG,OAAA;QAAQmG,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACPxG,OAAA;MAAAiG,QAAA,GAAK,UAAQ,EAACpF,MAAM;IAAA;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3BxG,OAAA;MAAK4G,GAAG,EAAExF,SAAU;MAACyF,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEvG,MAAM,EAAE,OAAO;QAAEiE,UAAU,EAAE;MAAO;IAAE;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAER;AAACtG,EAAA,CArNQD,aAAa;AAAA8G,EAAA,GAAb9G,aAAa;AAuNtB,eAAeA,aAAa;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}