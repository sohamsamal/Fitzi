{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ObjViewer = () => {\n  _s();\n  const mountRef = useRef(null);\n  // Moving the scene and camera outside useEffect to make them accessible throughout the component\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene setup\n    scene.background = new THREE.Color(0xdddddd);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    currentMount.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 1, 1);\n    scene.add(directionalLight);\n\n    // Camera position\n    camera.position.z = 5;\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Adjust renderer and camera aspect ratio on resize\n    const handleResize = () => {\n      renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n      camera.aspect = currentMount.clientWidth / currentMount.clientHeight;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [scene, camera]); // Adding scene and camera as dependencies\n\n  const handleUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        const loader = new OBJLoader();\n        loader.load(reader.result, obj => {\n          // Adjust the object and add it to the scene\n          obj.scale.set(0.1, 0.1, 0.1); // Scale the object to a visible size\n          scene.add(obj);\n          // Fit camera to object\n          const box = new THREE.Box3().setFromObject(obj);\n          const center = box.getCenter(new THREE.Vector3());\n          const size = box.getSize(new THREE.Vector3());\n          const maxDim = Math.max(size.x, size.y, size.z);\n          const fov = camera.fov * (Math.PI / 180);\n          let cameraZ = Math.abs(maxDim / 4 * Math.tan(fov * 2));\n          cameraZ *= 2; // a little bit of padding\n          camera.position.z = cameraZ;\n          const minZ = box.min.z;\n          const cameraToFarEdge = minZ < 0 ? -minZ + cameraZ : cameraZ - minZ;\n          camera.far = cameraToFarEdge * 3;\n          camera.updateProjectionMatrix();\n\n          // Orbit controls could be added here for better interaction (optional)\n        }, undefined, error => console.error('An error occurred:', error));\n      };\n      reader.readAsDataURL(file); // This line should be removed, it's duplicated\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload,\n      accept: \".obj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '800px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ObjViewer, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ObjViewer;\nexport default ObjViewer;\nvar _c;\n$RefreshReg$(_c, \"ObjViewer\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","OBJLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","ObjViewer","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","currentMount","current","background","Color","renderer","WebGLRenderer","setSize","clientWidth","clientHeight","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","position","set","z","animate","requestAnimationFrame","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeChild","removeEventListener","handleUpload","event","file","target","files","reader","FileReader","readAsDataURL","onload","loader","load","result","obj","scale","box","Box3","setFromObject","center","getCenter","Vector3","size","getSize","maxDim","Math","max","x","y","fov","PI","cameraZ","abs","tan","minZ","min","cameraToFarEdge","far","undefined","error","console","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\n\nconst ObjViewer = () => {\n  const mountRef = useRef(null);\n  // Moving the scene and camera outside useEffect to make them accessible throughout the component\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene setup\n    scene.background = new THREE.Color(0xdddddd);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    currentMount.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 1, 1);\n    scene.add(directionalLight);\n\n    // Camera position\n    camera.position.z = 5;\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Adjust renderer and camera aspect ratio on resize\n    const handleResize = () => {\n      renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n      camera.aspect = currentMount.clientWidth / currentMount.clientHeight;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [scene, camera]); // Adding scene and camera as dependencies\n\n  const handleUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        const loader = new OBJLoader();\n        loader.load(reader.result, (obj) => {\n          // Adjust the object and add it to the scene\n          obj.scale.set(0.1, 0.1, 0.1); // Scale the object to a visible size\n          scene.add(obj);\n          // Fit camera to object\n          const box = new THREE.Box3().setFromObject(obj);\n          const center = box.getCenter(new THREE.Vector3());\n          const size = box.getSize(new THREE.Vector3());\n          const maxDim = Math.max(size.x, size.y, size.z);\n          const fov = camera.fov * (Math.PI / 180);\n          let cameraZ = Math.abs(maxDim / 4 * Math.tan(fov * 2));\n          cameraZ *= 2; // a little bit of padding\n          camera.position.z = cameraZ;\n          const minZ = box.min.z;\n          const cameraToFarEdge = (minZ < 0) ? -minZ + cameraZ : cameraZ - minZ;\n          camera.far = cameraToFarEdge * 3;\n          camera.updateProjectionMatrix();\n\n          // Orbit controls could be added here for better interaction (optional)\n        }, undefined, error => console.error('An error occurred:', error));\n      };\n      reader.readAsDataURL(file); // This line should be removed, it's duplicated\n    }\n  };\n\n  return (\n    <>\n      <input type=\"file\" onChange={handleUpload} accept=\".obj\" />\n      <div ref={mountRef} style={{ width: '800px', height: '600px' }}></div>\n    </>\n  );\n};\n\nexport default ObjViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}