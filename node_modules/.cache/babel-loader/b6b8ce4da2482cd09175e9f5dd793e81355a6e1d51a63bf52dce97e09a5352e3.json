{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ObjViewerApp() {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(new THREE.Scene()); // Use useRef for the scene\n\n  useEffect(() => {\n    // Access the scene from the ref\n    const scene = sceneRef.current;\n    scene.background = new THREE.Color(0x8FBCD4);\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize, false);\n\n    // Clean up on component unmount\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const objLoader = new OBJLoader();\n        objLoader.parse(e.target.result, obj => {\n          // Now access the scene through sceneRef.current\n          sceneRef.current.add(obj); // Add the OBJ model to the scene\n          obj.position.set(0, 0, 0);\n          obj.scale.set(1, 1, 1);\n        }, undefined, error => console.error(error));\n      };\n      reader.readAsDataURL(file); // This reads the file as a data URL, which OBJLoader.parse expects\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".obj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(ObjViewerApp, \"fTngvglZ51/ZfcBvyjlXBMMFK9c=\");\n_c = ObjViewerApp;\nexport default ObjViewerApp;\nvar _c;\n$RefreshReg$(_c, \"ObjViewerApp\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OBJLoader","OrbitControls","jsxDEV","_jsxDEV","ObjViewerApp","_s","mountRef","sceneRef","Scene","scene","current","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","light","HemisphereLight","add","controls","animate","requestAnimationFrame","update","render","onWindowResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","handleFileChange","event","file","target","files","reader","FileReader","onload","e","objLoader","parse","result","obj","set","scale","undefined","error","console","readAsDataURL","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nfunction ObjViewerApp() {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(new THREE.Scene()); // Use useRef for the scene\n\n  useEffect(() => {\n    // Access the scene from the ref\n    const scene = sceneRef.current;\n    scene.background = new THREE.Color(0x8FBCD4);\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    // Clean up on component unmount\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const objLoader = new OBJLoader();\n        objLoader.parse(e.target.result, (obj) => {\n          // Now access the scene through sceneRef.current\n          sceneRef.current.add(obj); // Add the OBJ model to the scene\n          obj.position.set(0, 0, 0);\n          obj.scale.set(1, 1, 1);\n        }, undefined, error => console.error(error));\n      };\n      reader.readAsDataURL(file); // This reads the file as a data URL, which OBJLoader.parse expects\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} accept=\".obj\" />\n      <div ref={mountRef} style={{ width: '100vw', height: '100vh' }}></div>\n    </div>\n  );\n}\n\nexport default ObjViewerApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}