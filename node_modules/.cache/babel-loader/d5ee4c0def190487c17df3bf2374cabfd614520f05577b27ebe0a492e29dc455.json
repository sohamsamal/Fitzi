{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ObjViewerApp() {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x8FBCD4); // Light blue background\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(75, currentMount.clientWidth / currentMount.clientHeight, 0.1, 1000);\n    camera.position.set(0, 0, 5); // Adjust as needed\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    currentMount.appendChild(renderer.domElement);\n\n    // Lights\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    // OrbitControls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n\n    // Animation Loop\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update(); // Only required if controls.enableDamping = true, or if controls.autoRotate = true\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Clean up\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n    };\n  }, []);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const objLoader = new OBJLoader();\n        objLoader.load(e.target.result, obj => {\n          // Center and scale the model appropriately\n          const box = new THREE.Box3().setFromObject(obj);\n          const center = box.getCenter(new THREE.Vector3());\n          const size = box.getSize(new THREE.Vector3());\n          const maxDim = Math.max(size.x, size.y, size.z);\n          const scale = 1.0 / maxDim;\n          obj.position.x = -center.x;\n          obj.position.y = -center.y;\n          obj.position.z = -center.z;\n          obj.scale.multiplyScalar(scale);\n          scene.add(obj); // Add the object to the scene\n\n          // Adjust camera position and controls to fit the object\n          const boundingSphere = new THREE.Sphere();\n          box.getBoundingSphere(boundingSphere);\n          camera.position.z = boundingSphere.radius * 2;\n          controls.target.set(center.x, center.y, center.z);\n          controls.update();\n        }, undefined, error => {\n          console.error('An error happened with the OBJLoader.', error);\n        });\n      };\n      reader.readAsDataURL(file); // Use readAsDataURL for OBJLoader\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".obj\",\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ObjViewerApp, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ObjViewerApp;\nexport default ObjViewerApp;\nvar _c;\n$RefreshReg$(_c, \"ObjViewerApp\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OBJLoader","OrbitControls","jsxDEV","_jsxDEV","ObjViewerApp","_s","mountRef","currentMount","current","scene","Scene","background","Color","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","window","devicePixelRatio","appendChild","domElement","light","HemisphereLight","add","controls","update","animate","requestAnimationFrame","render","removeChild","handleFileChange","event","file","target","files","reader","FileReader","onload","e","objLoader","load","result","obj","box","Box3","setFromObject","center","getCenter","Vector3","size","getSize","maxDim","Math","max","x","y","z","scale","multiplyScalar","boundingSphere","Sphere","getBoundingSphere","radius","undefined","error","console","readAsDataURL","children","type","onChange","accept","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nfunction ObjViewerApp() {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x8FBCD4); // Light blue background\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(75, currentMount.clientWidth / currentMount.clientHeight, 0.1, 1000);\n    camera.position.set(0, 0, 5); // Adjust as needed\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    currentMount.appendChild(renderer.domElement);\n\n    // Lights\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    // OrbitControls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n\n    // Animation Loop\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update(); // Only required if controls.enableDamping = true, or if controls.autoRotate = true\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Clean up\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const objLoader = new OBJLoader();\n        objLoader.load(e.target.result, (obj) => {\n          // Center and scale the model appropriately\n          const box = new THREE.Box3().setFromObject(obj);\n          const center = box.getCenter(new THREE.Vector3());\n          const size = box.getSize(new THREE.Vector3());\n          const maxDim = Math.max(size.x, size.y, size.z);\n          const scale = 1.0 / maxDim;\n          obj.position.x = -center.x;\n          obj.position.y = -center.y;\n          obj.position.z = -center.z;\n          obj.scale.multiplyScalar(scale);\n\n          scene.add(obj); // Add the object to the scene\n\n          // Adjust camera position and controls to fit the object\n          const boundingSphere = new THREE.Sphere();\n          box.getBoundingSphere(boundingSphere);\n          camera.position.z = boundingSphere.radius * 2;\n          controls.target.set(center.x, center.y, center.z);\n          controls.update();\n        }, undefined, (error) => {\n          console.error('An error happened with the OBJLoader.', error);\n        });\n      };\n      reader.readAsDataURL(file); // Use readAsDataURL for OBJLoader\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} accept=\".obj\" style={{ marginBottom: '10px' }} />\n      <div ref={mountRef} style={{ width: '100vw', height: '100vh' }}></div>\n    </div>\n  );\n}\n\nexport default ObjViewerApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}