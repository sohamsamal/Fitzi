{"ast":null,"code":"var _jsxFileName = \"/Users/jasonlin/Desktop/fitzi2.0/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AvatarAndFaceSwap() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [avatarName, setAvatarName] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [gender, setGender] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [avatarId, setAvatarId] = useState('');\n  const [exportUrl, setExportUrl] = useState('');\n  const [resultImage, setResultImage] = useState(null);\n  const viewerRef = useRef(null);\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MTA1NzUxNjQsImlhdCI6MTcxMDU0NTE2MSwiYXV0aF90aW1lIjoxNzEwNTM5MTY0LCJqdGkiOiI1NDAzN2M4MC04NmU3LTRiZDctODcyOC0wMTkwYzA5ZWNhOTMiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOWNlYzI3ZjQtMDY3Ny00OGI4LWE3ODUtZWM5NzJjODJlY2MyIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiMjZhZjExNzUtMTVmMi00MWE4LTg3YWYtNjQ1ZjQ3NzJmNDIwIiwic2Vzc2lvbl9zdGF0ZSI6IjdiMmYwMGFiLWE4MTAtNDJjYS04MTA0LTkzNTY5ZmRhOTliOSIsImFjciI6IjAiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiN2IyZjAwYWItYTgxMC00MmNhLTgxMDQtOTM1NjlmZGE5OWI5IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiSmFzb24gTGluIiwicHJlZmVycmVkX3VzZXJuYW1lIjoiamFzb25saW4yOTc2NEBnbWFpbC5jb20iLCJnaXZlbl9uYW1lIjoiSmFzb24iLCJmYW1pbHlfbmFtZSI6IkxpbiIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NLS3piTVlHOXU0Q1J4LVNZdEw4dmhPVlZvZzZJa01iUHVuUWRZZmJsTG49czk2LWMiLCJlbWFpbCI6Imphc29ubGluMjk3NjRAZ21haWwuY29tIn0.kqvZFztOjwbvFXzqXdCQBjPPrFKtS_2Qe1LP2KxnG-izF1fqZY6trjrZkuCZHYzxdclcT9nJ1xi4FONxBmf6UXseUYS2cL1f_Q5lKow4g2Y4_PVQmyGzDqOKmOmvH3Nsr-IlQ-KIMdsg8gxoTYI7ACb_8JnMPbY0_36h1FMdjzDkT8Ds2TwQSuvciyZntnGnIJ3RMpwltxqsJRpBT_nAQSfafRV8SHfZlyBAm1b4_n1fQOITCuab1so3lshv-B_q8kgIObDLMJqQFMxfGwC2ML_BfwNQSrljloQFd6aT7HsoNmAfEF8sRhMsMjptomYcsWKHzzZUkHrX9nKCBrGmsw';\n  const faceSwapApiToken = 'user:893-aelqV9NKacC4TTkmhVc1l';\n  const targetImageUrls = {\n    male: 'https://i.ibb.co/6XkxwPM/male-dark.png',\n    female: 'https://i.ibb.co/fqyjSKK/woman-light.png'\n  };\n  useEffect(() => {\n    if (exportUrl) {\n      loadOBJModel(exportUrl);\n    }\n  }, [exportUrl]);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const fetchImageAsBlob = async imageUrl => {\n    const response = await fetch(imageUrl);\n    const imageBlob = await response.blob();\n    return new File([imageBlob], 'target.jpg', {\n      type: 'image/jpeg'\n    });\n  };\n  const performFaceSwap = async sourceImage => {\n    try {\n      const targetImageUrl = gender === 'female' ? targetImageUrls.female : targetImageUrls.male;\n      const targetImageBlob = await fetchImageAsBlob(targetImageUrl);\n      let formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', sourceImage);\n      await axios.post('https://api.useapi.net/v1/faceswap/saveid', formData, {\n        headers: {\n          'Authorization': `Bearer ${faceSwapApiToken}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', targetImageBlob);\n      const response = await axios.post('https://api.useapi.net/v1/faceswap/swapid', formData, {\n        headers: {\n          'Authorization': `Bearer ${faceSwapApiToken}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data && response.data.attachments.length > 0) {\n        setResultImage(response.data.attachments[0].url);\n        return response.data.attachments[0].url;\n      }\n    } catch (error) {\n      console.error('Face swap error:', error);\n    }\n  };\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      const response = await axios.post('https://api.meshcapade.com/api/v1/avatars/create/from-images', {}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      setAvatarId(response.data.data.id);\n      return response.data.data.id;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n      throw error;\n    }\n  };\n  const getUploadLink = async avatarId => {\n    try {\n      const response = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/images`, {}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      return response.data.data.links.upload;\n    } catch (error) {\n      console.error('Error obtaining upload link:', error);\n      throw error;\n    }\n  };\n  const uploadImage = async uploadUrl => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.put(uploadUrl, file, {\n        headers: {\n          'Content-Type': 'image/png'\n        }\n      });\n      setStatus('Image Uploaded. Starting Fitting Process...');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n      throw error;\n    }\n  };\n  const startFittingProcess = async avatarId => {\n    try {\n      const response = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/fit-to-images`, {\n        avatarname: avatarName,\n        height: parseInt(height),\n        weight: parseInt(weight),\n        gender: gender\n      }, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      pollFittingStatus(avatarId); // Start polling for fitting status right after initiating the fitting process\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n      throw error;\n    }\n  };\n  const pollFittingStatus = async avatarId => {\n    try {\n      const response = await axios.get(`https://api.meshcapade.com/api/v1/avatars/${avatarId}`, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      const fittingStatus = response.data.data.attributes.state;\n      const detailedStatus = response.data.data.attributes.detailedStatus; // Assuming this field exists\n\n      // Update the status message to include detailed information\n      setStatus(`Fitting Process: ${fittingStatus}. Details: ${detailedStatus || 'Processing...'}`);\n      if (fittingStatus === 'READY') {\n        setStatus('Fitting Process Complete. Starting Export...');\n        startExportProcess(avatarId);\n      } else if (fittingStatus === 'ERROR') {\n        // Handle any errors that might have occurred during the fitting process\n        setStatus('Error during fitting process. Please try again.');\n      } else {\n        // Continue polling if the process is not yet complete or in an error state\n        setTimeout(() => pollFittingStatus(avatarId), 5000); // Poll every 5 seconds\n      }\n    } catch (error) {\n      console.error('Error polling fitting status:', error);\n      setStatus('Error Polling Fitting Status');\n      throw error;\n    }\n  };\n  async function startExportProcess(avatarId) {\n    const exportResponse = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/export`, {\n      format: 'obj',\n      // or 'fbx' depending on your needs\n      pose: 't'\n    }, {\n      headers: {\n        Authorization: `Bearer ${apiToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    pollExportStatus(exportResponse.data.data.id);\n  }\n  async function pollExportStatus(meshId) {\n    let isExported = false;\n    while (!isExported) {\n      const exportStatusResponse = await axios.get(`https://api.meshcapade.com/api/v1/meshes/${meshId}`, {\n        headers: {\n          Authorization: `Bearer ${apiToken}`\n        }\n      });\n      if (exportStatusResponse.data.data.attributes.state === 'READY') {\n        isExported = true;\n        setExportUrl(exportStatusResponse.data.data.attributes.url.path);\n        setStatus('Export complete. Model ready for viewing.');\n      } else {\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Poll every 5 seconds\n      }\n    }\n  }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file || !gender || !height || !weight || !avatarName) {\n      alert('Please fill all fields.');\n      return;\n    }\n    setStatus('Processing...');\n    try {\n      const faceSwappedImage = await performFaceSwap(file);\n      const newFile = await fetchImageAsBlob(faceSwappedImage); // Convert the swapped image URL back to a File object for uploading\n      setFile(newFile); // Update the file state with the face-swapped image\n      const newAvatarId = await createAvatar();\n      const uploadUrl = await getUploadLink(newAvatarId);\n      await uploadImage(uploadUrl, newFile); // Pass the face-swapped image to the upload function\n      await startFittingProcess(newAvatarId);\n    } catch (error) {\n      console.error('Error in the process:', error);\n      setStatus('Error in Process');\n    }\n  };\n  function loadOBJModel(url) {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xdddddd);\n\n    // Setup camera\n    const aspectRatio = viewerRef.current.clientWidth / viewerRef.current.clientHeight;\n    const camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 1000);\n    camera.position.set(0, 0, 5);\n\n    // Setup renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(viewerRef.current.clientWidth, viewerRef.current.clientHeight);\n    viewerRef.current.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 1);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 20, 10);\n    scene.add(directionalLight);\n\n    // OrbitControls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.addEventListener('change', () => renderer.render(scene, camera));\n\n    // Load the texture\n    const textureLoader = new THREE.TextureLoader();\n    const texture = textureLoader.load('path/to/your/texture.jpg'); // Replace 'path/to/your/texture.jpg' with your texture path\n\n    // Load OBJ model\n    new OBJLoader().load(url, obj => {\n      // Apply texture\n      obj.traverse(function (child) {\n        if (child instanceof THREE.Mesh) {\n          child.material.map = texture;\n        }\n      });\n\n      // Adjust model\n      obj.scale.set(1.0, 1.0, 1.0);\n      obj.position.set(0, 0, 0);\n      scene.add(obj);\n\n      // Adjust camera and controls\n      const box = new THREE.Box3().setFromObject(obj);\n      const center = box.getCenter(new THREE.Vector3());\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const fov = camera.fov * (Math.PI / 180);\n      let cameraZ = Math.abs(maxDim / 4 * Math.tan(fov * 2));\n      cameraZ *= 1.1; // Add some padding\n      camera.position.z = cameraZ;\n      camera.far = 10000; // Increase the far clipping plane\n      camera.updateProjectionMatrix(); // Update the projection matrix\n\n      controls.target.copy(center);\n      animate();\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Avatar Name\",\n        value: avatarName,\n        onChange: e => setAvatarName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gender,\n        onChange: e => setGender(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"neutral\",\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Height in cm\",\n        value: height,\n        onChange: e => setHeight(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Weight in kg\",\n        value: weight,\n        onChange: e => setWeight(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: viewerRef,\n      style: {\n        width: '100vw',\n        height: '100vh',\n        background: '#aaa'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), resultImage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: resultImage,\n        alt: \"Result\",\n        style: {\n          width: '0px',\n          height: '0px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 3\n  }, this);\n}\n_s(AvatarAndFaceSwap, \"yeJ0Ap2uVOU/oB0tleroC7f2iwc=\");\n_c = AvatarAndFaceSwap;\nexport default AvatarAndFaceSwap;\nvar _c;\n$RefreshReg$(_c, \"AvatarAndFaceSwap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","THREE","OBJLoader","OrbitControls","jsxDEV","_jsxDEV","Fragment","_Fragment","AvatarAndFaceSwap","_s","file","setFile","avatarName","setAvatarName","height","setHeight","weight","setWeight","gender","setGender","status","setStatus","avatarId","setAvatarId","exportUrl","setExportUrl","resultImage","setResultImage","viewerRef","apiToken","faceSwapApiToken","targetImageUrls","male","female","loadOBJModel","handleFileChange","event","target","files","fetchImageAsBlob","imageUrl","response","fetch","imageBlob","blob","File","type","performFaceSwap","sourceImage","targetImageUrl","targetImageBlob","formData","FormData","append","post","headers","data","attachments","length","url","error","console","createAvatar","id","getUploadLink","links","upload","uploadImage","uploadUrl","put","startFittingProcess","avatarname","parseInt","pollFittingStatus","get","fittingStatus","attributes","state","detailedStatus","startExportProcess","setTimeout","exportResponse","format","pose","Authorization","pollExportStatus","meshId","isExported","exportStatusResponse","path","Promise","resolve","handleSubmit","preventDefault","alert","faceSwappedImage","newFile","newAvatarId","scene","Scene","background","Color","aspectRatio","current","clientWidth","clientHeight","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","controls","addEventListener","render","textureLoader","TextureLoader","texture","load","obj","traverse","child","Mesh","material","map","scale","box","Box3","setFromObject","center","getCenter","Vector3","size","getSize","maxDim","Math","max","x","y","z","fov","PI","cameraZ","abs","tan","far","updateProjectionMatrix","copy","animate","requestAnimationFrame","update","children","onSubmit","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","e","ref","style","width","src","alt","_c","$RefreshReg$"],"sources":["/Users/jasonlin/Desktop/fitzi2.0/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nfunction AvatarAndFaceSwap() {\n  const [file, setFile] = useState(null);\n  const [avatarName, setAvatarName] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [gender, setGender] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [avatarId, setAvatarId] = useState('');\n  const [exportUrl, setExportUrl] = useState('');\n  const [resultImage, setResultImage] = useState(null);\n  const viewerRef = useRef(null);\n\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MTA1NzUxNjQsImlhdCI6MTcxMDU0NTE2MSwiYXV0aF90aW1lIjoxNzEwNTM5MTY0LCJqdGkiOiI1NDAzN2M4MC04NmU3LTRiZDctODcyOC0wMTkwYzA5ZWNhOTMiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiOWNlYzI3ZjQtMDY3Ny00OGI4LWE3ODUtZWM5NzJjODJlY2MyIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiMjZhZjExNzUtMTVmMi00MWE4LTg3YWYtNjQ1ZjQ3NzJmNDIwIiwic2Vzc2lvbl9zdGF0ZSI6IjdiMmYwMGFiLWE4MTAtNDJjYS04MTA0LTkzNTY5ZmRhOTliOSIsImFjciI6IjAiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiN2IyZjAwYWItYTgxMC00MmNhLTgxMDQtOTM1NjlmZGE5OWI5IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiSmFzb24gTGluIiwicHJlZmVycmVkX3VzZXJuYW1lIjoiamFzb25saW4yOTc2NEBnbWFpbC5jb20iLCJnaXZlbl9uYW1lIjoiSmFzb24iLCJmYW1pbHlfbmFtZSI6IkxpbiIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NLS3piTVlHOXU0Q1J4LVNZdEw4dmhPVlZvZzZJa01iUHVuUWRZZmJsTG49czk2LWMiLCJlbWFpbCI6Imphc29ubGluMjk3NjRAZ21haWwuY29tIn0.kqvZFztOjwbvFXzqXdCQBjPPrFKtS_2Qe1LP2KxnG-izF1fqZY6trjrZkuCZHYzxdclcT9nJ1xi4FONxBmf6UXseUYS2cL1f_Q5lKow4g2Y4_PVQmyGzDqOKmOmvH3Nsr-IlQ-KIMdsg8gxoTYI7ACb_8JnMPbY0_36h1FMdjzDkT8Ds2TwQSuvciyZntnGnIJ3RMpwltxqsJRpBT_nAQSfafRV8SHfZlyBAm1b4_n1fQOITCuab1so3lshv-B_q8kgIObDLMJqQFMxfGwC2ML_BfwNQSrljloQFd6aT7HsoNmAfEF8sRhMsMjptomYcsWKHzzZUkHrX9nKCBrGmsw';\n  const faceSwapApiToken = 'user:893-aelqV9NKacC4TTkmhVc1l';\n\n  const targetImageUrls = {\n    male: 'https://i.ibb.co/6XkxwPM/male-dark.png',\n    female: 'https://i.ibb.co/fqyjSKK/woman-light.png',\n  };\n\n  useEffect(() => {\n    if (exportUrl) {\n      loadOBJModel(exportUrl);\n    }\n  }, [exportUrl]);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const fetchImageAsBlob = async (imageUrl) => {\n    const response = await fetch(imageUrl);\n    const imageBlob = await response.blob();\n    return new File([imageBlob], 'target.jpg', { type: 'image/jpeg' });\n  };\n\n  const performFaceSwap = async (sourceImage) => {\n    try {\n      const targetImageUrl = gender === 'female' ? targetImageUrls.female : targetImageUrls.male;\n      const targetImageBlob = await fetchImageAsBlob(targetImageUrl);\n\n      let formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', sourceImage);\n\n      await axios.post('https://api.useapi.net/v1/faceswap/saveid', formData, {\n        headers: {\n          'Authorization': `Bearer ${faceSwapApiToken}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      formData = new FormData();\n      formData.append('channel', '1218277318921949369');\n      formData.append('idname', 'source');\n      formData.append('image', targetImageBlob);\n\n      const response = await axios.post('https://api.useapi.net/v1/faceswap/swapid', formData, {\n        headers: {\n          'Authorization': `Bearer ${faceSwapApiToken}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      if (response.data && response.data.attachments.length > 0) {\n        setResultImage(response.data.attachments[0].url);\n        return response.data.attachments[0].url;\n      }\n    } catch (error) {\n      console.error('Face swap error:', error);\n    }\n  };\n\n\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      const response = await axios.post(\n        'https://api.meshcapade.com/api/v1/avatars/create/from-images', {}, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      setAvatarId(response.data.data.id);\n      return response.data.data.id;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n      throw error;\n    }\n  };\n\n  const getUploadLink = async (avatarId) => {\n    try {\n      const response = await axios.post(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}/images`, {}, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      return response.data.data.links.upload;\n    } catch (error) {\n      console.error('Error obtaining upload link:', error);\n      throw error;\n    }\n  };\n\n  const uploadImage = async (uploadUrl) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.put(uploadUrl, file, { headers: { 'Content-Type': 'image/png' } });\n      setStatus('Image Uploaded. Starting Fitting Process...');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n      throw error;\n    }\n  };\n\n  const startFittingProcess = async (avatarId) => {\n    try {\n      const response = await axios.post(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}/fit-to-images`,\n        {\n          avatarname: avatarName,\n          height: parseInt(height),\n          weight: parseInt(weight),\n          gender: gender\n        },\n        { headers: { 'Authorization': `Bearer ${apiToken}`, 'Content-Type': 'application/json' } }\n      );\n      pollFittingStatus(avatarId); // Start polling for fitting status right after initiating the fitting process\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n      throw error;\n    }\n  };\n\n  const pollFittingStatus = async (avatarId) => {\n    try {\n      const response = await axios.get(\n        `https://api.meshcapade.com/api/v1/avatars/${avatarId}`, \n        { headers: { 'Authorization': `Bearer ${apiToken}` } }\n      );\n      const fittingStatus = response.data.data.attributes.state;\n      const detailedStatus = response.data.data.attributes.detailedStatus; // Assuming this field exists\n      \n      // Update the status message to include detailed information\n      setStatus(`Fitting Process: ${fittingStatus}. Details: ${detailedStatus || 'Processing...'}`);\n  \n      if (fittingStatus === 'READY') {\n        setStatus('Fitting Process Complete. Starting Export...');\n        startExportProcess(avatarId);\n      } else if (fittingStatus === 'ERROR') {\n        // Handle any errors that might have occurred during the fitting process\n        setStatus('Error during fitting process. Please try again.');\n      } else {\n        // Continue polling if the process is not yet complete or in an error state\n        setTimeout(() => pollFittingStatus(avatarId), 5000); // Poll every 5 seconds\n      }\n    } catch (error) {\n      console.error('Error polling fitting status:', error);\n      setStatus('Error Polling Fitting Status');\n      throw error;\n    }\n  };\n  \n\n  async function startExportProcess(avatarId) {\n    const exportResponse = await axios.post(`https://api.meshcapade.com/api/v1/avatars/${avatarId}/export`, {\n        format: 'obj', // or 'fbx' depending on your needs\n        pose: 't',\n    }, {\n        headers: { Authorization: `Bearer ${apiToken}`, 'Content-Type': 'application/json' },\n    });\n    pollExportStatus(exportResponse.data.data.id);\n}\n\nasync function pollExportStatus(meshId) {\n    let isExported = false;\n    while (!isExported) {\n        const exportStatusResponse = await axios.get(`https://api.meshcapade.com/api/v1/meshes/${meshId}`, {\n            headers: { Authorization: `Bearer ${apiToken}` },\n        });\n        if (exportStatusResponse.data.data.attributes.state === 'READY') {\n            isExported = true;\n            setExportUrl(exportStatusResponse.data.data.attributes.url.path);\n            setStatus('Export complete. Model ready for viewing.');\n        } else {\n            await new Promise(resolve => setTimeout(resolve, 5000)); // Poll every 5 seconds\n        }\n    }\n}\n\n\nconst handleSubmit = async (event) => {\n  event.preventDefault();\n  if (!file || !gender || !height || !weight || !avatarName) {\n    alert('Please fill all fields.');\n    return;\n  }\n\n  setStatus('Processing...');\n  try {\n    const faceSwappedImage = await performFaceSwap(file);\n    const newFile = await fetchImageAsBlob(faceSwappedImage); // Convert the swapped image URL back to a File object for uploading\n    setFile(newFile); // Update the file state with the face-swapped image\n    const newAvatarId = await createAvatar();\n    const uploadUrl = await getUploadLink(newAvatarId);\n    await uploadImage(uploadUrl, newFile); // Pass the face-swapped image to the upload function\n    await startFittingProcess(newAvatarId);\n  } catch (error) {\n    console.error('Error in the process:', error);\n    setStatus('Error in Process');\n  }\n};\n\n\n\nfunction loadOBJModel(url) {\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xdddddd);\n\n  // Setup camera\n  const aspectRatio = viewerRef.current.clientWidth / viewerRef.current.clientHeight;\n  const camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 1000);\n  camera.position.set(0, 0, 5);\n\n  // Setup renderer\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(viewerRef.current.clientWidth, viewerRef.current.clientHeight);\n  viewerRef.current.appendChild(renderer.domElement);\n\n  // Lighting\n  const ambientLight = new THREE.AmbientLight(0x404040, 1);\n  scene.add(ambientLight);\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n  directionalLight.position.set(0, 20, 10);\n  scene.add(directionalLight);\n\n  // OrbitControls\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.addEventListener('change', () => renderer.render(scene, camera));\n\n  // Load the texture\n  const textureLoader = new THREE.TextureLoader();\n  const texture = textureLoader.load('path/to/your/texture.jpg'); // Replace 'path/to/your/texture.jpg' with your texture path\n\n  // Load OBJ model\n  new OBJLoader().load(url, (obj) => {\n    // Apply texture\n    obj.traverse(function (child) {\n      if (child instanceof THREE.Mesh) {\n        child.material.map = texture;\n      }\n    });\n\n    // Adjust model\n    obj.scale.set(1.0, 1.0, 1.0);\n    obj.position.set(0, 0, 0);\n    scene.add(obj);\n\n    // Adjust camera and controls\n    const box = new THREE.Box3().setFromObject(obj);\n    const center = box.getCenter(new THREE.Vector3());\n    const size = box.getSize(new THREE.Vector3());\n\n    const maxDim = Math.max(size.x, size.y, size.z);\n    const fov = camera.fov * (Math.PI / 180);\n    let cameraZ = Math.abs(maxDim / 4 * Math.tan(fov * 2));\n    cameraZ *= 1.1; // Add some padding\n    camera.position.z = cameraZ;\n\n    camera.far = 10000; // Increase the far clipping plane\n    camera.updateProjectionMatrix(); // Update the projection matrix\n\n    controls.target.copy(center);\n\n    animate();\n  });\n\n  function animate() {\n    requestAnimationFrame(animate);\n    controls.update();\n    renderer.render(scene, camera);\n  }\n}\n\n\nreturn (\n  <div>\n      <form onSubmit={handleSubmit}>\n          <input type=\"file\" onChange={handleFileChange} />\n          <input type=\"text\" placeholder=\"Avatar Name\" value={avatarName} onChange={(e) => setAvatarName(e.target.value)} />\n          <select value={gender} onChange={(e) => setGender(e.target.value)}>\n            <option value=\"\">Select Gender</option>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"neutral\">Neutral</option>\n          </select>\n          <input type=\"number\" placeholder=\"Height in cm\" value={height} onChange={(e) => setHeight(e.target.value)} />\n          <input type=\"number\" placeholder=\"Weight in kg\" value={weight} onChange={(e) => setWeight(e.target.value)} />\n          <button type=\"submit\">Create Avatar</button>\n      </form>\n      <div>Status: {status}</div>\n      <div ref={viewerRef} style={{ width: '100vw', height: '100vh', background: '#aaa' }}></div>\n      {resultImage && (\n        <>\n          <img src={resultImage} alt=\"Result\" style={{ width: '0px', height: '0px' }} />\n        </>\n      )}\n  </div>\n);\n}\n\nexport default AvatarAndFaceSwap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}