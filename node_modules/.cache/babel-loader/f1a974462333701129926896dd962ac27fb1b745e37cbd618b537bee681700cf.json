{"ast":null,"code":"var _jsxFileName = \"/Users/ssamal/Desktop/my-meshcapade-app/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Export from './Export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('Idle');\n  const [assetID, setAssetID] = useState('');\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MDg2Njg1MzIsImlhdCI6MTcwODYzMjUzNCwiYXV0aF90aW1lIjoxNzA4NjMyNTMyLCJqdGkiOiJjNjhlMzA4ZS04OTM4LTRjNmMtYmM1My05OTM5MzFhZmU4ZmIiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNmIwNzcwMmYtZDNmOS00YmJlLWJkZWYtNGYyYTU5ZjMzMWQwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiZmJlY2RhODQtMDUwOC00MTkxLWI0ZmQtMDZjNTEyZGFhOTY0Iiwic2Vzc2lvbl9zdGF0ZSI6IjEwMWNkNzhiLTZiZTktNDllNi1hOGU0LWZhOTNiMDQ0MzM3NyIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMTAxY2Q3OGItNmJlOS00OWU2LWE4ZTQtZmE5M2IwNDQzMzc3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiRml0emkgU3RhcnR1cCIsInByZWZlcnJlZF91c2VybmFtZSI6ImZpdHppLnN0YXJ0dXBAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkZpdHppIiwiZmFtaWx5X25hbWUiOiJTdGFydHVwIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0tJVjd4c202ZHRKSTV3SVNXbzBHV2pzTUpvMDdZWm80Sm5YdmozWENRbT1zOTYtYyIsImVtYWlsIjoiZml0emkuc3RhcnR1cEBnbWFpbC5jb20ifQ.kBvnHgNaV-NAQgpUS7N97A-Q0UoPe7yu6tq-QbO4LVTGeI7Urkp2NllBEmV950EzJBHtz5Oe9gVd6LLitOciP1n_YmEbiuRT7uVhbIU8bGL5PKinpcAH1kMwDsc6yxDm8lVWN1Wx8OE_v8ydgR29tzGfKBPDOCavBW0xiLuMKb1DX0BLsQWmrkSpqANjkufnXq5gPRW36lWSytEw_1new8NAEOYrPiZK9yBv-waqiicNA32pPL11-HwyNtsGtdK5rQUkHnBlACW4ScROW6Hz6HhaN3rFEwAnCXUHuMpxI_1yh_cDiBWKenAoA0pgwnBaNszbU2jwVihTWGW20g2v2w'; // Place your API token here\n\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      const response = await axios.post('https://api.meshcapade.com/api/v1/avatars/create/from-images', {}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      const newAssetID = response.data.id; // Update according to actual API response structure\n      setAssetID(newAssetID);\n      setStatus('Avatar Created');\n      return newAssetID;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n    }\n  };\n  const ExportAvatar = ({\n    assetID,\n    authToken\n  }) => {\n    _s();\n    const [exportStatus, setExportStatus] = useState('');\n    const triggerExport = async () => {\n      try {\n        const exportResponse = await axios.post(`https://api.meshcapade.com/avatars/${assetID}/export`, {/* body parameters, if any, like format and pose */}, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        });\n        const meshID = exportResponse.data.id; // Assuming the response includes an ID for the mesh\n        checkExportStatus(meshID);\n      } catch (error) {\n        console.error('Error triggering export:', error);\n      }\n    };\n    const checkExportStatus = async meshID => {\n      try {\n        let status = '';\n        do {\n          const statusResponse = await axios.get(`https://api.meshcapade.com/meshes/${meshID}`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`\n            }\n          });\n          status = statusResponse.data.status;\n          setExportStatus(status);\n          if (status !== 'READY') {\n            await new Promise(resolve => setTimeout(resolve, 5000)); // Wait for 5 seconds before checking again\n          }\n        } while (status !== 'READY');\n        if (status === 'READY') {\n          downloadExportedAvatar(statusResponse.data.url);\n        }\n      } catch (error) {\n        console.error('Error checking export status:', error);\n      }\n    };\n    const downloadExportedAvatar = downloadUrl => {\n      window.location.href = downloadUrl; // Simple way to trigger download, or implement your own method\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: triggerExport,\n        children: \"Export Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Export Status: \", exportStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this);\n  };\n  _s(ExportAvatar, \"X8HbZkfgg2Qw2OnJKkqxSnN1I/k=\");\n  const uploadImage = async assetID => {\n    setStatus('Uploading Image...');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post(`https://api.meshcapade.com/api/v1/avatars/${assetID}/images/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setStatus('Image Uploaded');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n    }\n  };\n  const startFittingProcess = async assetID => {\n    setStatus('Starting Fitting Process...');\n    try {\n      await axios.post(`https://api.meshcapade.com/api/v1/avatars/${assetID}/fit-to-images`, {}, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`\n        }\n      });\n      setStatus('Fitting Process Started');\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    const createdAssetID = await createAvatar();\n    if (createdAssetID) {\n      await uploadImage(createdAssetID);\n      await startFittingProcess(createdAssetID);\n      // Consider implementing polling or a callback mechanism to check the status of the fitting process\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload and Create Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", assetID && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Asset ID: \", assetID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meshcapade Avatar Exporter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Export, {\n      assetID: assetID,\n      apiToken: apiToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"eC1hQOmz0ibGLE3T6uDWOgjVtcw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Export","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","file","setFile","status","setStatus","assetID","setAssetID","apiToken","handleFileChange","event","target","files","createAvatar","response","post","headers","newAssetID","data","id","error","console","ExportAvatar","authToken","exportStatus","setExportStatus","triggerExport","exportResponse","Authorization","meshID","checkExportStatus","statusResponse","get","Promise","resolve","setTimeout","downloadExportedAvatar","url","downloadUrl","window","location","href","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","uploadImage","formData","FormData","append","startFittingProcess","handleSubmit","preventDefault","alert","createdAssetID","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/ssamal/Desktop/my-meshcapade-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Export from './Export';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('Idle');\n  const [assetID, setAssetID] = useState('');\n  const apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuSnVpYzVwbXk1T1hGSjVmY1RIQTdUNVktRHZVbVVOR2xxVHBqS0hDVnU4In0.eyJleHAiOjE3MDg2Njg1MzIsImlhdCI6MTcwODYzMjUzNCwiYXV0aF90aW1lIjoxNzA4NjMyNTMyLCJqdGkiOiJjNjhlMzA4ZS04OTM4LTRjNmMtYmM1My05OTM5MzFhZmU4ZmIiLCJpc3MiOiJodHRwczovL2F1dGgubWVzaGNhcGFkZS5jb20vcmVhbG1zL21lc2hjYXBhZGUtbWUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNmIwNzcwMmYtZDNmOS00YmJlLWJkZWYtNGYyYTU5ZjMzMWQwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWVzaGNhcGFkZS1tZSIsIm5vbmNlIjoiZmJlY2RhODQtMDUwOC00MTkxLWI0ZmQtMDZjNTEyZGFhOTY0Iiwic2Vzc2lvbl9zdGF0ZSI6IjEwMWNkNzhiLTZiZTktNDllNi1hOGU0LWZhOTNiMDQ0MzM3NyIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9tZXNoY2FwYWRlLmNvbSIsImh0dHBzOi8vbWUubWVzaGNhcGFkZS5jb20iLCJodHRwczovL21lc2hjYXBhZGUubWUiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1nY21jIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMTAxY2Q3OGItNmJlOS00OWU2LWE4ZTQtZmE5M2IwNDQzMzc3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJuYW1lIjoiRml0emkgU3RhcnR1cCIsInByZWZlcnJlZF91c2VybmFtZSI6ImZpdHppLnN0YXJ0dXBAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkZpdHppIiwiZmFtaWx5X25hbWUiOiJTdGFydHVwIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0tJVjd4c202ZHRKSTV3SVNXbzBHV2pzTUpvMDdZWm80Sm5YdmozWENRbT1zOTYtYyIsImVtYWlsIjoiZml0emkuc3RhcnR1cEBnbWFpbC5jb20ifQ.kBvnHgNaV-NAQgpUS7N97A-Q0UoPe7yu6tq-QbO4LVTGeI7Urkp2NllBEmV950EzJBHtz5Oe9gVd6LLitOciP1n_YmEbiuRT7uVhbIU8bGL5PKinpcAH1kMwDsc6yxDm8lVWN1Wx8OE_v8ydgR29tzGfKBPDOCavBW0xiLuMKb1DX0BLsQWmrkSpqANjkufnXq5gPRW36lWSytEw_1new8NAEOYrPiZK9yBv-waqiicNA32pPL11-HwyNtsGtdK5rQUkHnBlACW4ScROW6Hz6HhaN3rFEwAnCXUHuMpxI_1yh_cDiBWKenAoA0pgwnBaNszbU2jwVihTWGW20g2v2w'; // Place your API token here\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const createAvatar = async () => {\n    setStatus('Creating Avatar...');\n    try {\n      const response = await axios.post('https://api.meshcapade.com/api/v1/avatars/create/from-images', {}, {\n        headers: { 'Authorization': `Bearer ${apiToken}` },\n      });\n      const newAssetID = response.data.id; // Update according to actual API response structure\n      setAssetID(newAssetID);\n      setStatus('Avatar Created');\n      return newAssetID;\n    } catch (error) {\n      console.error('Error creating avatar:', error);\n      setStatus('Error Creating Avatar');\n    }\n  };\n\nconst ExportAvatar = ({ assetID, authToken }) => {\n  const [exportStatus, setExportStatus] = useState('');\n\n  const triggerExport = async () => {\n    try {\n      const exportResponse = await axios.post(\n        `https://api.meshcapade.com/avatars/${assetID}/export`,\n        { /* body parameters, if any, like format and pose */ },\n        { headers: { Authorization: `Bearer ${authToken}` } }\n      );\n      const meshID = exportResponse.data.id; // Assuming the response includes an ID for the mesh\n      checkExportStatus(meshID);\n    } catch (error) {\n      console.error('Error triggering export:', error);\n    }\n  };\n\n  const checkExportStatus = async (meshID) => {\n    try {\n      let status = '';\n      do {\n        const statusResponse = await axios.get(\n          `https://api.meshcapade.com/meshes/${meshID}`,\n          { headers: { Authorization: `Bearer ${authToken}` } }\n        );\n        status = statusResponse.data.status;\n        setExportStatus(status);\n        if (status !== 'READY') {\n          await new Promise(resolve => setTimeout(resolve, 5000)); // Wait for 5 seconds before checking again\n        }\n      } while (status !== 'READY');\n\n      if (status === 'READY') {\n        downloadExportedAvatar(statusResponse.data.url);\n      }\n    } catch (error) {\n      console.error('Error checking export status:', error);\n    }\n  };\n\n  const downloadExportedAvatar = (downloadUrl) => {\n    window.location.href = downloadUrl; // Simple way to trigger download, or implement your own method\n  };\n\n  return (\n    <div>\n      <button onClick={triggerExport}>Export Avatar</button>\n      <p>Export Status: {exportStatus}</p>\n    </div>\n  );\n};\n\n  const uploadImage = async (assetID) => {\n    setStatus('Uploading Image...');\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      await axios.post(`https://api.meshcapade.com/api/v1/avatars/${assetID}/images/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${apiToken}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      setStatus('Image Uploaded');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setStatus('Error Uploading Image');\n    }\n  };\n\n  const startFittingProcess = async (assetID) => {\n    setStatus('Starting Fitting Process...');\n    try {\n      await axios.post(`https://api.meshcapade.com/api/v1/avatars/${assetID}/fit-to-images`, {}, {\n        headers: { 'Authorization': `Bearer ${apiToken}` },\n      });\n      setStatus('Fitting Process Started');\n    } catch (error) {\n      console.error('Error starting fitting process:', error);\n      setStatus('Error Starting Fitting Process');\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    \n    const createdAssetID = await createAvatar();\n    if (createdAssetID) {\n      await uploadImage(createdAssetID);\n      await startFittingProcess(createdAssetID);\n      // Consider implementing polling or a callback mechanism to check the status of the fitting process\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" onChange={handleFileChange} />\n        <button type=\"submit\">Upload and Create Avatar</button>\n      </form>\n      <div>Status: {status}</div>\n      {assetID && <div>Asset ID: {assetID}</div>}\n      <h1>Meshcapade Avatar Exporter</h1>\n      <Export assetID={assetID} apiToken={apiToken} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}